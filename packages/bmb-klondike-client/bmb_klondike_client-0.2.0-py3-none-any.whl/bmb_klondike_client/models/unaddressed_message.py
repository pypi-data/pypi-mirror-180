# coding: utf-8

"""
    Klondike API

    Claim unaddressed messages.   # noqa: E501

    OpenAPI spec version: 0.2.0
    Contact: apiteam@bmbix.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class UnaddressedMessage(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'system_id': 'float',
        'unaddressed_message_id': 'str',
        'received_at': 'str',
        'from_address_id': 'str',
        'local_account': 'str',
        'message_type': 'str',
        'message_content': 'str',
        'summary': 'str',
        'sender_reference': 'str',
        'checksum': 'str',
        'checksum_algorithm': 'str',
        'message_token': 'str',
        'to_address_id': 'str',
        'claimed_at': 'str',
        'martlet_submission_status': 'str',
        'martlet_message_id': 'str',
        'martlet_comments': 'str',
        'martlet_submitted_at': 'str'
    }

    attribute_map = {
        'system_id': 'system_id',
        'unaddressed_message_id': 'unaddressed_message_id',
        'received_at': 'received_at',
        'from_address_id': 'from_address_id',
        'local_account': 'local_account',
        'message_type': 'message_type',
        'message_content': 'message_content',
        'summary': 'summary',
        'sender_reference': 'sender_reference',
        'checksum': 'checksum',
        'checksum_algorithm': 'checksum_algorithm',
        'message_token': 'message_token',
        'to_address_id': 'to_address_id',
        'claimed_at': 'claimed_at',
        'martlet_submission_status': 'martlet_submission_status',
        'martlet_message_id': 'martlet_message_id',
        'martlet_comments': 'martlet_comments',
        'martlet_submitted_at': 'martlet_submitted_at'
    }

    def __init__(self, system_id=None, unaddressed_message_id=None, received_at=None, from_address_id=None, local_account=None, message_type=None, message_content=None, summary=None, sender_reference=None, checksum=None, checksum_algorithm=None, message_token=None, to_address_id=None, claimed_at=None, martlet_submission_status=None, martlet_message_id=None, martlet_comments=None, martlet_submitted_at=None):  # noqa: E501
        """UnaddressedMessage - a model defined in Swagger"""  # noqa: E501
        self._system_id = None
        self._unaddressed_message_id = None
        self._received_at = None
        self._from_address_id = None
        self._local_account = None
        self._message_type = None
        self._message_content = None
        self._summary = None
        self._sender_reference = None
        self._checksum = None
        self._checksum_algorithm = None
        self._message_token = None
        self._to_address_id = None
        self._claimed_at = None
        self._martlet_submission_status = None
        self._martlet_message_id = None
        self._martlet_comments = None
        self._martlet_submitted_at = None
        self.discriminator = None
        if system_id is not None:
            self.system_id = system_id
        if unaddressed_message_id is not None:
            self.unaddressed_message_id = unaddressed_message_id
        if received_at is not None:
            self.received_at = received_at
        if from_address_id is not None:
            self.from_address_id = from_address_id
        if local_account is not None:
            self.local_account = local_account
        if message_type is not None:
            self.message_type = message_type
        if message_content is not None:
            self.message_content = message_content
        if summary is not None:
            self.summary = summary
        if sender_reference is not None:
            self.sender_reference = sender_reference
        if checksum is not None:
            self.checksum = checksum
        if checksum_algorithm is not None:
            self.checksum_algorithm = checksum_algorithm
        if message_token is not None:
            self.message_token = message_token
        if to_address_id is not None:
            self.to_address_id = to_address_id
        if claimed_at is not None:
            self.claimed_at = claimed_at
        if martlet_submission_status is not None:
            self.martlet_submission_status = martlet_submission_status
        if martlet_message_id is not None:
            self.martlet_message_id = martlet_message_id
        if martlet_comments is not None:
            self.martlet_comments = martlet_comments
        if martlet_submitted_at is not None:
            self.martlet_submitted_at = martlet_submitted_at

    @property
    def system_id(self):
        """Gets the system_id of this UnaddressedMessage.  # noqa: E501


        :return: The system_id of this UnaddressedMessage.  # noqa: E501
        :rtype: float
        """
        return self._system_id

    @system_id.setter
    def system_id(self, system_id):
        """Sets the system_id of this UnaddressedMessage.


        :param system_id: The system_id of this UnaddressedMessage.  # noqa: E501
        :type: float
        """

        self._system_id = system_id

    @property
    def unaddressed_message_id(self):
        """Gets the unaddressed_message_id of this UnaddressedMessage.  # noqa: E501


        :return: The unaddressed_message_id of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._unaddressed_message_id

    @unaddressed_message_id.setter
    def unaddressed_message_id(self, unaddressed_message_id):
        """Sets the unaddressed_message_id of this UnaddressedMessage.


        :param unaddressed_message_id: The unaddressed_message_id of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._unaddressed_message_id = unaddressed_message_id

    @property
    def received_at(self):
        """Gets the received_at of this UnaddressedMessage.  # noqa: E501


        :return: The received_at of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._received_at

    @received_at.setter
    def received_at(self, received_at):
        """Sets the received_at of this UnaddressedMessage.


        :param received_at: The received_at of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._received_at = received_at

    @property
    def from_address_id(self):
        """Gets the from_address_id of this UnaddressedMessage.  # noqa: E501


        :return: The from_address_id of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._from_address_id

    @from_address_id.setter
    def from_address_id(self, from_address_id):
        """Sets the from_address_id of this UnaddressedMessage.


        :param from_address_id: The from_address_id of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._from_address_id = from_address_id

    @property
    def local_account(self):
        """Gets the local_account of this UnaddressedMessage.  # noqa: E501


        :return: The local_account of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._local_account

    @local_account.setter
    def local_account(self, local_account):
        """Sets the local_account of this UnaddressedMessage.


        :param local_account: The local_account of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._local_account = local_account

    @property
    def message_type(self):
        """Gets the message_type of this UnaddressedMessage.  # noqa: E501


        :return: The message_type of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._message_type

    @message_type.setter
    def message_type(self, message_type):
        """Sets the message_type of this UnaddressedMessage.


        :param message_type: The message_type of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._message_type = message_type

    @property
    def message_content(self):
        """Gets the message_content of this UnaddressedMessage.  # noqa: E501


        :return: The message_content of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._message_content

    @message_content.setter
    def message_content(self, message_content):
        """Sets the message_content of this UnaddressedMessage.


        :param message_content: The message_content of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._message_content = message_content

    @property
    def summary(self):
        """Gets the summary of this UnaddressedMessage.  # noqa: E501


        :return: The summary of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this UnaddressedMessage.


        :param summary: The summary of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._summary = summary

    @property
    def sender_reference(self):
        """Gets the sender_reference of this UnaddressedMessage.  # noqa: E501


        :return: The sender_reference of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._sender_reference

    @sender_reference.setter
    def sender_reference(self, sender_reference):
        """Sets the sender_reference of this UnaddressedMessage.


        :param sender_reference: The sender_reference of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._sender_reference = sender_reference

    @property
    def checksum(self):
        """Gets the checksum of this UnaddressedMessage.  # noqa: E501


        :return: The checksum of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._checksum

    @checksum.setter
    def checksum(self, checksum):
        """Sets the checksum of this UnaddressedMessage.


        :param checksum: The checksum of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._checksum = checksum

    @property
    def checksum_algorithm(self):
        """Gets the checksum_algorithm of this UnaddressedMessage.  # noqa: E501


        :return: The checksum_algorithm of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._checksum_algorithm

    @checksum_algorithm.setter
    def checksum_algorithm(self, checksum_algorithm):
        """Sets the checksum_algorithm of this UnaddressedMessage.


        :param checksum_algorithm: The checksum_algorithm of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._checksum_algorithm = checksum_algorithm

    @property
    def message_token(self):
        """Gets the message_token of this UnaddressedMessage.  # noqa: E501


        :return: The message_token of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._message_token

    @message_token.setter
    def message_token(self, message_token):
        """Sets the message_token of this UnaddressedMessage.


        :param message_token: The message_token of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._message_token = message_token

    @property
    def to_address_id(self):
        """Gets the to_address_id of this UnaddressedMessage.  # noqa: E501


        :return: The to_address_id of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._to_address_id

    @to_address_id.setter
    def to_address_id(self, to_address_id):
        """Sets the to_address_id of this UnaddressedMessage.


        :param to_address_id: The to_address_id of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._to_address_id = to_address_id

    @property
    def claimed_at(self):
        """Gets the claimed_at of this UnaddressedMessage.  # noqa: E501


        :return: The claimed_at of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._claimed_at

    @claimed_at.setter
    def claimed_at(self, claimed_at):
        """Sets the claimed_at of this UnaddressedMessage.


        :param claimed_at: The claimed_at of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._claimed_at = claimed_at

    @property
    def martlet_submission_status(self):
        """Gets the martlet_submission_status of this UnaddressedMessage.  # noqa: E501


        :return: The martlet_submission_status of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._martlet_submission_status

    @martlet_submission_status.setter
    def martlet_submission_status(self, martlet_submission_status):
        """Sets the martlet_submission_status of this UnaddressedMessage.


        :param martlet_submission_status: The martlet_submission_status of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._martlet_submission_status = martlet_submission_status

    @property
    def martlet_message_id(self):
        """Gets the martlet_message_id of this UnaddressedMessage.  # noqa: E501


        :return: The martlet_message_id of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._martlet_message_id

    @martlet_message_id.setter
    def martlet_message_id(self, martlet_message_id):
        """Sets the martlet_message_id of this UnaddressedMessage.


        :param martlet_message_id: The martlet_message_id of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._martlet_message_id = martlet_message_id

    @property
    def martlet_comments(self):
        """Gets the martlet_comments of this UnaddressedMessage.  # noqa: E501


        :return: The martlet_comments of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._martlet_comments

    @martlet_comments.setter
    def martlet_comments(self, martlet_comments):
        """Sets the martlet_comments of this UnaddressedMessage.


        :param martlet_comments: The martlet_comments of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._martlet_comments = martlet_comments

    @property
    def martlet_submitted_at(self):
        """Gets the martlet_submitted_at of this UnaddressedMessage.  # noqa: E501


        :return: The martlet_submitted_at of this UnaddressedMessage.  # noqa: E501
        :rtype: str
        """
        return self._martlet_submitted_at

    @martlet_submitted_at.setter
    def martlet_submitted_at(self, martlet_submitted_at):
        """Sets the martlet_submitted_at of this UnaddressedMessage.


        :param martlet_submitted_at: The martlet_submitted_at of this UnaddressedMessage.  # noqa: E501
        :type: str
        """

        self._martlet_submitted_at = martlet_submitted_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(UnaddressedMessage, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UnaddressedMessage):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

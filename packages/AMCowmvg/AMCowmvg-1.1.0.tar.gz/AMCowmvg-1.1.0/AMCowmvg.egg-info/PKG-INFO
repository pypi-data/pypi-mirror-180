Metadata-Version: 2.1
Name: AMCowmvg
Version: 1.1.0
Summary: Produce Antimony Files and Graphs using a browser GUI
Author-email: Olivia Walsh <owalsh@uw.edu>, Matthew Van Ginneken <mattcvang@gmail.com>
License: MIT License
        
        Copyright (c) 2022 MatthewVanG
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/MatthewVanG/AMC-OWMVG
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

# Antimony Model Creator - Olivia Walsh, Matthew Van Ginneken
 
This package allows the user to visualize a reaction via a steady state graph.  The user can create and submit their own reactions on the Flask Webpage, or they can submit an antimony txt file or a SBML file also through the webpage.  The Webpage will run a simulation using the reactions with tellurium and show the steady state graph.  
 
## <b>Installation </b>
 
To install this package the user should open up to their terminal and use pip install to install the package 
> pip install AMC-OWMVG==1.1.0
 
Once the terminal has confirmed installation, the user must create a new folder in their desktop and move to that directory
> cd Desktop <br>
> cd newFolder (replace newFolder with the name of the folder)
 
Within this folder the user has to create a file and another folder called static.  We recommend using an IDE or an editor to make these.
> static (a folder) <br>
> runApp.py <br>
 
Within the static folder the user should make two .txt files that are empty.
> antimony1.txt <br>
> antimony2.txt <br>
 
Going back to the file runApp.py the user should type out the following into the file
> import AMCowmvg <br>
> from AMCowmvg.testing import runApp <br>
> runApp()
 
The user should then run the runApp.py in their terminal
> python runApp.py
 
This will produce a few lines of response including a website link, the user should copy and paste this into their browser.  The user now can create and visualize their reactions
 
##<b> Installation if you have access to the StarterAMC folder </b>
### <i>If the user has access to the StarterAMC folder they should download it to their desktop then run through the following commands </i>
 
To install this package the user should open up to their terminal and use pip install to install the package 
> pip install AMC-OWMVG==1.1.0
 
Once the terminal has confirmed installation the user must navigate to the StarterAMC directory
> cd Desktop <br>
> cd StarterAMC
 
Once the user is in the correct directory they should run the runApp.py file from their terminal
> python runApp.py
 
This will produce a few lines of response including a website link, the user should copy and paste this into their browser.  The user now can create and visualize their reactions

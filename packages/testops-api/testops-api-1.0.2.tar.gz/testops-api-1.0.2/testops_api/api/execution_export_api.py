"""
    Katalon TestOps API reference

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from testops_api.api_client import ApiClient, Endpoint
from testops_api.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)


class ExecutionExportApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        def __check_existed_export_file(
            self,
            id,
            **kwargs
        ):
            """Find execution exported file  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.check_existed_export_file(id, async_req=True)
            >>> result = thread.get()

            Args:
                id (int):

            Keyword Args:
                file_type (str): [optional] if omitted the server will use the default value of "CSV"
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                bool
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['id'] = \
                id
            return self.call_with_http_info(**kwargs)

        self.check_existed_export_file = Endpoint(
            settings={
                'response_type': (bool,),
                'auth': [
                    'basicScheme'
                ],
                'endpoint_path': '/api/v1/executions/{id}/export/check-exist-file',
                'operation_id': 'check_existed_export_file',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'file_type',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                    'file_type',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('file_type',): {

                        "PDF": "PDF",
                        "CSV": "CSV",
                        "XLSX": "XLSX",
                        "ZIP": "ZIP",
                        "HAR": "HAR"
                    },
                },
                'openapi_types': {
                    'id':
                        (int,),
                    'file_type':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                    'file_type': 'fileType',
                },
                'location_map': {
                    'id': 'path',
                    'file_type': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    '*/*'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__check_existed_export_file
        )

        def __download5(
            self,
            id,
            **kwargs
        ):
            """Exports and downloads an Execution. Returns the Execution summary file.  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.download5(id, async_req=True)
            >>> result = thread.get()

            Args:
                id (int):

            Keyword Args:
                file_type (str): [optional] if omitted the server will use the default value of "CSV"
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                None
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['id'] = \
                id
            return self.call_with_http_info(**kwargs)

        self.download5 = Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'basicScheme'
                ],
                'endpoint_path': '/api/v1/executions/{id}/export',
                'operation_id': 'download5',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'file_type',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                    'file_type',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('file_type',): {

                        "PDF": "PDF",
                        "CSV": "CSV",
                        "XLSX": "XLSX",
                        "ZIP": "ZIP",
                        "HAR": "HAR"
                    },
                },
                'openapi_types': {
                    'id':
                        (int,),
                    'file_type':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                    'file_type': 'fileType',
                },
                'location_map': {
                    'id': 'path',
                    'file_type': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [],
                'content_type': [],
            },
            api_client=api_client,
            callable=__download5
        )

        def __enqueue_file(
            self,
            id,
            **kwargs
        ):
            """Enqueue file to be exported  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.enqueue_file(id, async_req=True)
            >>> result = thread.get()

            Args:
                id (int):

            Keyword Args:
                file_type (str): [optional] if omitted the server will use the default value of "CSV"
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                None
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['id'] = \
                id
            return self.call_with_http_info(**kwargs)

        self.enqueue_file = Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'basicScheme'
                ],
                'endpoint_path': '/api/v1/executions/{id}/export/enqueue-file',
                'operation_id': 'enqueue_file',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'file_type',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                    'file_type',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('file_type',): {

                        "PDF": "PDF",
                        "CSV": "CSV",
                        "XLSX": "XLSX",
                        "ZIP": "ZIP",
                        "HAR": "HAR"
                    },
                },
                'openapi_types': {
                    'id':
                        (int,),
                    'file_type':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                    'file_type': 'fileType',
                },
                'location_map': {
                    'id': 'path',
                    'file_type': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [],
                'content_type': [],
            },
            api_client=api_client,
            callable=__enqueue_file
        )

        def __send_execution_export_mail(
            self,
            id,
            **kwargs
        ):
            """Send email in case of timeout  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.send_execution_export_mail(id, async_req=True)
            >>> result = thread.get()

            Args:
                id (int):

            Keyword Args:
                file_type (str): [optional] if omitted the server will use the default value of "CSV"
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                None
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['id'] = \
                id
            return self.call_with_http_info(**kwargs)

        self.send_execution_export_mail = Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'basicScheme'
                ],
                'endpoint_path': '/api/v1/executions/{id}/export/send-mail',
                'operation_id': 'send_execution_export_mail',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'file_type',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                    'file_type',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('file_type',): {

                        "PDF": "PDF",
                        "CSV": "CSV",
                        "XLSX": "XLSX",
                        "ZIP": "ZIP",
                        "HAR": "HAR"
                    },
                },
                'openapi_types': {
                    'id':
                        (int,),
                    'file_type':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                    'file_type': 'fileType',
                },
                'location_map': {
                    'id': 'path',
                    'file_type': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [],
                'content_type': [],
            },
            api_client=api_client,
            callable=__send_execution_export_mail
        )

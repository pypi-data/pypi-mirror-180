{"version":3,"file":"static/js/613.39761f43.chunk.js","mappings":"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","sources":["../../core/src/workspace/RepositoryRemoteLocationLink.tsx","../../core/src/workspace/RepositoryLocationsList.tsx","../../core/src/instance/CodeLocationsPage.tsx","../../core/src/nav/InstanceWarningIcon.tsx","../../core/src/nav/WorkspaceStatus.tsx","../../core/src/instance/InstanceTabs.tsx","../../core/src/instance/useCanSeeConfig.tsx","../../core/src/ui/TabLink.tsx","../../core/src/workspace/ReloadAllButton.tsx","../../ui/src/components/NonIdealState.tsx","../../ui/src/components/PageHeader.tsx","../../ui/src/components/Tabs.tsx"],"sourcesContent":["import {Colors, Icon} from '@dagster-io/ui';\nimport React from 'react';\n\nexport const formatRepositoryUrl = (url: string): string => {\n  try {\n    const urlObj = new URL(url);\n    let org, repo, tag;\n    if (urlObj.host === 'github.com') {\n      [, org, repo, , tag] = urlObj.pathname.split('/', 7);\n    } else if (urlObj.host === 'gitlab.com') {\n      [, org, repo, , , tag] = urlObj.pathname.split('/', 8);\n    }\n    if (org && repo && tag) {\n      return `${org}/${repo}@${tag}`;\n    }\n  } catch (error) {\n    return url;\n  }\n  return url;\n};\n\nexport const RepositoryRemoteLocationLink: React.FC<{repositoryUrl: string}> = ({\n  repositoryUrl,\n}) => {\n  const formattedUrl = formatRepositoryUrl(repositoryUrl);\n\n  return (\n    <a href={repositoryUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n      <Icon\n        color={Colors.Link}\n        name=\"link\"\n        style={{display: 'inline-block', verticalAlign: 'middle'}}\n      />{' '}\n      {formattedUrl}\n    </a>\n  );\n};\n","import {\n  Box,\n  ButtonLink,\n  Colors,\n  Group,\n  NonIdealState,\n  Spinner,\n  Table,\n  Tag,\n  Caption,\n  Tooltip,\n} from '@dagster-io/ui';\nimport React from 'react';\n\nimport {usePermissions} from '../app/Permissions';\nimport {Timestamp} from '../app/time/Timestamp';\nimport {ReloadRepositoryLocationButton} from '../nav/ReloadRepositoryLocationButton';\nimport {\n  buildReloadFnForLocation,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\n\nimport {RepositoryLocationNonBlockingErrorDialog} from './RepositoryLocationErrorDialog';\nimport {RepositoryRemoteLocationLink} from './RepositoryRemoteLocationLink';\nimport {WorkspaceContext, WorkspaceRepositoryLocationNode} from './WorkspaceContext';\n\nconst TIME_FORMAT = {showSeconds: true, showTimezone: true};\n\nconst LocationStatus: React.FC<{\n  location: string;\n  locationOrError: WorkspaceRepositoryLocationNode;\n}> = (props) => {\n  const {location, locationOrError} = props;\n  const [showDialog, setShowDialog] = React.useState(false);\n\n  const reloadFn = React.useMemo(() => buildReloadFnForLocation(location), [location]);\n  const {reloading, tryReload} = useRepositoryLocationReload({\n    scope: 'location',\n    reloadFn,\n  });\n\n  if (locationOrError.loadStatus === 'LOADING') {\n    if (locationOrError.locationOrLoadError) {\n      return (\n        <Tag minimal intent=\"primary\">\n          Updating...\n        </Tag>\n      );\n    } else {\n      return (\n        <Tag minimal intent=\"primary\">\n          Loading...\n        </Tag>\n      );\n    }\n  }\n\n  if (locationOrError.locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <>\n        <Box flex={{alignItems: 'center', gap: 12}}>\n          <Tag minimal intent=\"danger\">\n            Failed\n          </Tag>\n          <ButtonLink onClick={() => setShowDialog(true)}>\n            <span style={{fontSize: '14px'}}>View error</span>\n          </ButtonLink>\n        </Box>\n        <RepositoryLocationNonBlockingErrorDialog\n          location={location}\n          isOpen={showDialog}\n          error={locationOrError.locationOrLoadError}\n          reloading={reloading}\n          onDismiss={() => setShowDialog(false)}\n          onTryReload={() => tryReload()}\n        />\n      </>\n    );\n  }\n\n  return (\n    <Tag minimal intent=\"success\">\n      Loaded\n    </Tag>\n  );\n};\n\nconst ReloadButton: React.FC<{\n  location: string;\n}> = (props) => {\n  const {location} = props;\n  const {canReloadRepositoryLocation} = usePermissions();\n\n  if (!canReloadRepositoryLocation.enabled) {\n    return (\n      <Tooltip content={canReloadRepositoryLocation.disabledReason}>\n        <ButtonLink color={Colors.Gray400}>Reload</ButtonLink>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <ReloadRepositoryLocationButton location={location}>\n      {({reloading, tryReload}) => (\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n          <ButtonLink onClick={() => tryReload()}>Reload</ButtonLink>\n          {reloading ? <Spinner purpose=\"body-text\" /> : null}\n        </Box>\n      )}\n    </ReloadRepositoryLocationButton>\n  );\n};\n\nexport const RepositoryLocationsList = () => {\n  const {locationEntries, loading} = React.useContext(WorkspaceContext);\n\n  if (loading && !locationEntries.length) {\n    return (\n      <Box flex={{gap: 8, alignItems: 'center'}} padding={{horizontal: 24}}>\n        <Spinner purpose=\"body-text\" />\n        <div>Loading...</div>\n      </Box>\n    );\n  }\n\n  if (!locationEntries.length) {\n    return (\n      <Box padding={{vertical: 32}}>\n        <NonIdealState\n          icon=\"folder\"\n          title=\"No definitions\"\n          description=\"When you add a code location, your definitions will appear here.\"\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Code location</th>\n          <th>Status</th>\n          <th colSpan={2}>Updated</th>\n        </tr>\n      </thead>\n      <tbody>\n        {locationEntries.map((location) => (\n          <tr key={location.name}>\n            <td style={{maxWidth: '50%'}}>\n              <Group direction=\"column\" spacing={4}>\n                <strong>{location.name}</strong>\n                <div>\n                  {location.displayMetadata.map((metadata, idx) => {\n                    const name = metadata.key === 'url' ? 'source' : metadata.key;\n                    const display =\n                      metadata.key === 'url' ? (\n                        <RepositoryRemoteLocationLink repositoryUrl={metadata.value} />\n                      ) : (\n                        metadata.value\n                      );\n\n                    return (\n                      <div key={idx}>\n                        <Caption style={{wordBreak: 'break-word'}}>\n                          {`${name}: `}\n                          <span style={{color: Colors.Gray400}}>{display}</span>\n                        </Caption>\n                      </div>\n                    );\n                  })}\n                </div>\n              </Group>\n            </td>\n            <td>\n              <LocationStatus location={location.name} locationOrError={location} />\n            </td>\n            <td style={{whiteSpace: 'nowrap'}}>\n              <Timestamp timestamp={{unix: location.updatedTimestamp}} timeFormat={TIME_FORMAT} />\n            </td>\n            <td style={{width: '180px'}}>\n              <ReloadButton location={location.name} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n","import {Box, Heading, PageHeader, Subheading} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useTrackPageView} from '../app/analytics';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {RepositoryLocationsList} from '../workspace/RepositoryLocationsList';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\n\nexport const CodeLocationsPage = () => {\n  useTrackPageView();\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const {locationEntries, loading} = React.useContext(WorkspaceContext);\n  const entryCount = locationEntries.length;\n\n  const subheadingText = () => {\n    if (loading || !entryCount) {\n      return 'Code locations';\n    }\n    return entryCount === 1 ? '1 code location' : `${entryCount} code locations`;\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={<Heading>{pageTitle}</Heading>}\n        tabs={<InstanceTabs tab=\"code-locations\" />}\n      />\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'center'}}\n        style={{height: '64px'}} // Preserve height whether \"Reload all\" is present or not\n      >\n        <Subheading id=\"repository-locations\">{subheadingText()}</Subheading>\n        {entryCount > 1 ? <ReloadAllButton /> : null}\n      </Box>\n      <RepositoryLocationsList />\n    </>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default CodeLocationsPage;\n","import {Colors, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const InstanceWarningIcon = React.memo(() => {\n  const {daemons} = React.useContext(DeploymentStatusContext);\n\n  if (!daemons) {\n    return null;\n  }\n\n  return (\n    <WarningTooltip\n      content={daemons.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {Colors, Icon, Tooltip, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const WorkspaceStatus: React.FC<{placeholder: boolean}> = React.memo(({placeholder}) => {\n  const {codeLocations} = React.useContext(DeploymentStatusContext);\n\n  if (!codeLocations) {\n    return placeholder ? <div style={{width: '16px'}} /> : null;\n  }\n\n  if (codeLocations.type === 'spinner') {\n    return (\n      <Tooltip content={codeLocations.content} placement=\"bottom\">\n        <Spinner purpose=\"body-text\" fillColor={Colors.Gray300} />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <WarningTooltip\n      content={codeLocations.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {QueryResult} from '@apollo/client';\nimport {Box, Tabs} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {InstanceWarningIcon} from '../nav/InstanceWarningIcon';\nimport {WorkspaceStatus} from '../nav/WorkspaceStatus';\nimport {TabLink} from '../ui/TabLink';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {useCanSeeConfig} from './useCanSeeConfig';\n\ninterface Props<TData> {\n  refreshState?: QueryRefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\nexport const InstanceTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {refreshState, tab} = props;\n\n  const {healthTitle} = React.useContext(InstancePageContext);\n  const canSeeConfig = useCanSeeConfig();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink\n          id=\"code-locations\"\n          title=\"Code locations\"\n          to=\"/code-locations\"\n          icon={<WorkspaceStatus placeholder={false} />}\n        />\n        <TabLink id=\"definitions\" title=\"Definitions\" to=\"/definitions\" />\n        <TabLink id=\"health\" title={healthTitle} to=\"/health\" icon={<InstanceWarningIcon />} />\n        {canSeeConfig ? <TabLink id=\"config\" title=\"Configuration\" to=\"/config\" /> : null}\n      </Tabs>\n      {refreshState ? (\n        <Box padding={{bottom: 8}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\n\nimport {InstanceConfigHasInfo} from './types/InstanceConfigHasInfo';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfo>(INSTANCE_CONFIG_HAS_INFO);\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      hasInfo\n    }\n  }\n`;\n","import {TabStyleProps, getTabA11yProps, getTabContent, tabCSS} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\ninterface TabLinkProps extends TabStyleProps, Omit<LinkProps, 'title'> {\n  title?: React.ReactNode;\n}\n\nexport const TabLink = styled((props: TabLinkProps) => {\n  const {to, title, ...rest} = props;\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof title === 'string' ? title : undefined;\n\n  return (\n    <Link to={to} title={titleText} {...containerProps} {...rest}>\n      {content}\n    </Link>\n  );\n})<TabLinkProps>`\n  ${tabCSS}\n`;\n","import {Button, Dialog, DialogBody, DialogFooter, Icon, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {usePermissions} from '../app/Permissions';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {\n  reloadFnForWorkspace,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\n\nimport {RepositoryLocationErrorDialog} from './RepositoryLocationErrorDialog';\n\nexport const ReloadAllButton: React.FC<{label?: string}> = ({label = 'Reload all'}) => {\n  const {canReloadWorkspace} = usePermissions();\n  const {reloading, tryReload, error, errorLocationId} = useRepositoryLocationReload({\n    scope: 'workspace',\n    reloadFn: reloadFnForWorkspace,\n  });\n\n  const [isOpen, setIsOpen] = React.useState(!!error);\n  React.useEffect(() => setIsOpen(!!error), [error]);\n\n  if (!canReloadWorkspace.enabled) {\n    return (\n      <Tooltip content={canReloadWorkspace.disabledReason}>\n        <Button icon={<Icon name=\"refresh\" />} disabled intent=\"none\">\n          {label}\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <>\n      <Button onClick={tryReload} icon={<Icon name=\"refresh\" />} loading={reloading} intent=\"none\">\n        {label}\n      </Button>\n      {errorLocationId ? (\n        <RepositoryLocationErrorDialog\n          error={error}\n          location={errorLocationId}\n          reloading={reloading}\n          onTryReload={tryReload}\n          onDismiss={() => setIsOpen(false)}\n          isOpen={isOpen}\n        />\n      ) : (\n        <Dialog\n          icon=\"error\"\n          title=\"Reload error\"\n          canEscapeKeyClose={false}\n          canOutsideClickClose={false}\n          style={{width: '90%'}}\n          isOpen={isOpen}\n        >\n          <DialogBody>{error && <PythonErrorInfo error={error} />}</DialogBody>\n          <DialogFooter>\n            <Button onClick={() => setIsOpen(false)}>Dismiss</Button>\n          </DialogFooter>\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import * as React from 'react';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Spinner} from './Spinner';\nimport {Subheading} from './Text';\n\nexport type NonIdealStateProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n> & {\n  icon: 'error' | 'no-results' | 'spinner' | IconName;\n  title: string;\n  description?: React.ReactNode;\n  action?: React.ReactNode;\n  shrinkable?: boolean;\n};\n\nexport const NonIdealState: React.FC<NonIdealStateProps> = ({\n  title,\n  description,\n  icon,\n  action,\n  shrinkable,\n}) => {\n  const singleContentElement = [title, description, action].filter(Boolean).length === 1;\n\n  return (\n    <Box\n      flex={{gap: 20, alignItems: singleContentElement ? 'center' : 'flex-start'}}\n      background={Colors.Gray50}\n      padding={24}\n      style={{\n        margin: 'auto',\n        borderRadius: 8,\n        width: shrinkable ? 'initial' : 'max-content',\n        maxWidth: 500,\n      }}\n    >\n      {icon === 'spinner' ? (\n        <Spinner purpose=\"section\" />\n      ) : icon === 'no-results' ? (\n        <Icon name=\"search\" size={48} color={Colors.Gray400} />\n      ) : (\n        <Icon name={icon} size={48} color={Colors.Gray400} />\n      )}\n      <Box\n        flex={{\n          gap: 8,\n          direction: 'column',\n          alignItems: 'flex-start',\n        }}\n      >\n        {title && <Subheading style={{color: Colors.Gray900}}>{title}</Subheading>}\n        {description && <div style={{color: Colors.Gray500}}>{description}</div>}\n        {action}\n      </Box>\n    </Box>\n  );\n};\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp3-breadcrumbs {\n    height: auto;\n  }\n`;\n","import * as React from 'react';\nimport styled, {css} from 'styled-components/macro';\n\nimport {Colors} from './Colors';\nimport {IconWrapper} from './Icon';\nimport {FontFamily} from './styles';\n\nexport interface TabStyleProps {\n  disabled?: boolean;\n  selected?: boolean;\n  count?: number | 'indeterminate' | null;\n  icon?: React.ReactNode;\n  title?: React.ReactNode;\n  $size?: 'small' | 'large';\n}\n\nexport const getTabA11yProps = (props: {selected?: boolean; disabled?: boolean}) => {\n  const {selected, disabled} = props;\n  return {\n    role: 'tab',\n    tabIndex: disabled ? -1 : 0,\n    'aria-disabled': disabled,\n    'aria-expanded': selected,\n    'aria-selected': selected,\n  };\n};\n\nexport const getTabContent = (props: TabStyleProps & {title?: React.ReactNode}) => {\n  const {title, count, icon} = props;\n  return (\n    <>\n      {title}\n      {icon}\n      {count !== undefined ? <Count>{count === 'indeterminate' ? '–' : count}</Count> : null}\n    </>\n  );\n};\n\nconst Count = styled.div`\n  display: inline;\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.02%;\n  padding: 0 4px;\n  color: ${Colors.Gray900};\n  background: ${Colors.Gray100};\n`;\n\nexport const tabCSS = css<TabStyleProps>`\n  background: none;\n  border: none;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 600;\n  padding: ${({$size}) => ($size === 'small' ? '10px 0' : '16px 0')};\n  box-shadow: ${({selected}) => (selected ? Colors.Blue500 : 'transparent')} 0 -2px 0 inset;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  gap: 6px;\n\n  &,\n  & a {\n    cursor: pointer;\n    user-select: none;\n    color: ${({selected, disabled}) =>\n      selected ? Colors.Blue500 : disabled ? Colors.Gray300 : Colors.Gray700};\n  }\n\n  & ${IconWrapper} {\n    color: ${({selected, disabled}) =>\n      selected ? Colors.Blue500 : disabled ? Colors.Gray300 : ''};\n  }\n\n  /* Focus outline only when using keyboard, not when focusing via mouse. */\n  &:focus {\n    outline: none !important;\n    box-shadow: ${({selected, disabled}) =>\n        selected ? Colors.Blue500 : disabled ? 'transparent' : Colors.Blue200}\n      0 -2px 0 inset;\n  }\n\n  &:hover {\n    &,\n    a {\n      text-decoration: none;\n      color: ${({selected, disabled}) =>\n        selected ? Colors.Blue700 : disabled ? Colors.Gray300 : Colors.Blue700};\n    }\n    ${IconWrapper} {\n      color: ${({selected, disabled}) =>\n        selected ? Colors.Blue700 : disabled ? Colors.Gray300 : ''};\n    }\n  }\n`;\n\ninterface TabProps extends TabStyleProps, Omit<React.ComponentPropsWithoutRef<'button'>, 'title'> {}\n\nexport const Tab = styled((props: TabProps) => {\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof props.title === 'string' ? props.title : undefined;\n\n  return (\n    <button {...props} {...containerProps} title={titleText} type=\"button\">\n      {content}\n    </button>\n  );\n})<TabStyleProps>`\n  ${tabCSS}\n`;\n\ninterface TabsProps {\n  children: Array<React.ReactElement<TabProps>>;\n  selectedTabId?: string;\n  onChange?: (selectedTabId: string) => void;\n  size?: 'small' | 'large';\n}\n\nexport const Tabs = styled(({selectedTabId, children, onChange, size = 'large', ...rest}) => {\n  return (\n    <div {...rest} role=\"tablist\">\n      {React.Children.map(children, (child) =>\n        child\n          ? React.cloneElement(child, {\n              selected: child.props.selected || child.props.id === selectedTabId,\n              $size: size,\n              ...(onChange\n                ? {\n                    onClick: () => onChange(child.props.id),\n                  }\n                : {}),\n            })\n          : null,\n      )}\n    </div>\n  );\n})<TabsProps>`\n  display: flex;\n  gap: 16px;\n  font-size: ${({size}) => (size === 'small' ? '12px' : '14px')};\n  line-height: ${({size}) => (size === 'small' ? '16px' : '20px')};\n  font-weight: 600;\n`;\n"],"names":["RepositoryRemoteLocationLink","repositoryUrl","formattedUrl","url","org","repo","tag","urlObj","URL","host","pathname","split","error","formatRepositoryUrl","href","target","rel","Icon","color","Colors","name","style","display","verticalAlign","TIME_FORMAT","showSeconds","showTimezone","LocationStatus","props","location","locationOrError","React","showDialog","setShowDialog","reloadFn","buildReloadFnForLocation","useRepositoryLocationReload","scope","reloading","tryReload","loadStatus","locationOrLoadError","Tag","minimal","intent","__typename","Box","flex","alignItems","gap","ButtonLink","onClick","fontSize","isOpen","onDismiss","onTryReload","ReloadButton","canReloadRepositoryLocation","usePermissions","enabled","ReloadRepositoryLocationButton","direction","Spinner","purpose","Tooltip","content","disabledReason","RepositoryLocationsList","WorkspaceContext","locationEntries","loading","length","padding","horizontal","Table","colSpan","map","maxWidth","Group","spacing","displayMetadata","metadata","idx","key","value","wordBreak","whiteSpace","Timestamp","timestamp","unix","updatedTimestamp","timeFormat","width","vertical","NonIdealState","icon","title","description","CodeLocationsPage","useTrackPageView","pageTitle","InstancePageContext","entryCount","PageHeader","tabs","InstanceTabs","tab","justifyContent","height","id","ReloadAllButton","InstanceWarningIcon","daemons","DeploymentStatusContext","WarningTooltip","position","modifiers","offset","options","WorkspaceStatus","placeholder","codeLocations","type","placement","fillColor","refreshState","healthTitle","canSeeConfig","useCanSeeConfig","Tabs","selectedTabId","TabLink","to","bottom","QueryRefresh","data","useQuery","INSTANCE_CONFIG_HAS_INFO","instance","hasInfo","gql","styled","rest","containerProps","getTabA11yProps","getTabContent","titleText","undefined","tabCSS","label","canReloadWorkspace","reloadFnForWorkspace","errorLocationId","setIsOpen","canEscapeKeyClose","canOutsideClickClose","disabled","action","shrinkable","singleContentElement","filter","Boolean","background","margin","borderRadius","size","tags","right","PageHeaderContainer","top","left","border","side","wrap","selected","role","tabIndex","count","Count","FontFamily","css","$size","IconWrapper","Tab","children","onChange","child"],"sourceRoot":""}
name: ci

on: [push, pull_request]

jobs:

  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        python -m pip install .
    - name: Run tests
      run: python setup.py test

  type-checker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .
        python -m pip install mypy
        python -m pip install types-atomicwrites
    - name: Run the type checker
      run: mypy --ignore-missing-imports khard

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[doc]
    - name: Build the documentation
      run: |
        python setup.py build
        make -C doc html man


#
#
##-------------------------------------- python package
#
## This workflow will install Python dependencies, run tests and lint with a variety of Python versions
## For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
#  Python-package-build:
#
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version: ["3.8", "3.9", "3.10"]
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v2
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        python -m pip install flake8
#        python -m pip install .
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings.
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Run tests
#      run: python setup.py test
#
##-------------------------------------- python app
#
## This workflow will install Python dependencies, run tests and lint with a single version of Python
## For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
#  Python-application-build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python 3.10
#      uses: actions/setup-python@v2
#      with:
#        python-version: "3.10"
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install flake8 pytest
#        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        pytest
#
##-------------------------------------- python lint
#  Pylint-build:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        python-version: ["3.8", "3.9", "3.10"]
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v2
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install pylint
#    - name: Analysing the code with pylint
#      run: |
#        pylint $(git ls-files '*.py')

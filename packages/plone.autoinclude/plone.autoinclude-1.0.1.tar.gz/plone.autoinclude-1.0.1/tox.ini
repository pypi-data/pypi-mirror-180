# Generated from:
# https://github.com/zopefoundation/meta/tree/master/config/pure-python
[tox]
minversion = 3.18
envlist =
    lint
    py{36,37,38,39,310,311,py3}-{integration,unit}
    buildout2
    buildout3
    coverage
# Not enabled by default:
# black

[testenv]
# Set the defaults for all test environments.
# Override in [testenv:env-name] where needed.
usedevelop = false
skip_install = true
# example.ploneintegration depends on plone.autoinclude,
# and 'deps' is handled before 'usedevelop', so we need '.' in the deps.
# Also, we want all test packages in development mode,
# otherwise when you make a change, you must recreate the environment.
deps =
    zope.testrunner
    -e .
    -e test-packages/example.basetestpackage
    -e test-packages/example.addon
    -e test-packages/example.different
    -e test-packages/example.different2
    -e test-packages/example.metaoverrides
    -e test-packages/example.ploneaddon
    -e test-packages/example.plone-dash-addon
    -e test-packages/example.ploneintegration
    -e test-packages/example.zopeaddon
    -e test-packages/example.zopeintegration
    -e test-packages/example.multipleeps
    -e test-packages/ExampleCamelCase
    -e test-packages/namespaceexample.native
    -e test-packages/namespaceexample.pkgutilns
# extras =
#     test

# Paths for integration tests: run only the tests of the test packages.
# Do not run plone.autoinclude tests.
integration_testpaths =
# With --test-path=test-packages we find no tests.
# Only paths to the src directories work.
    --test-path=test-packages/example.addon/src
    --test-path=test-packages/example.different/src
    --test-path=test-packages/example.different2/src
    --test-path=test-packages/example.metaoverrides/src
    --test-path=test-packages/example.ploneaddon/src
    --test-path=test-packages/example.ploneintegration/src
    --test-path=test-packages/example.zopeaddon/src
    --test-path=test-packages/example.zopeintegration/src
    --test-path=test-packages/example.multipleeps/src
    --test-path=test-packages/namespaceexample.native/src
    --test-path=test-packages/namespaceexample.pkgutilns/src

[testenv:py{36,37,38,39,310,311,py3}-integration]
# Integration tests: run only the tests of the test packages.
# Do not run plone.autoinclude tests.
commands =
    zope-testrunner {[testenv]integration_testpaths} []
extras =
    test

[testenv:py{36,37,38,39,310,311,py3}-unit]
usedevelop = true
skip_install = false
deps =
    zope.testrunner
commands =
    zope-testrunner --test-path=src
extras =
    test

[testenv:lint]
basepython = python3
skip_install = true
deps =
    flake8
    check-manifest
    check-python-versions
commands =
    flake8 src test-packages setup.py
    check-manifest
    check-python-versions

[testenv:coverage]
basepython = python3
allowlist_externals =
    mkdir
deps =
    {[testenv]deps}
    coverage
    coverage-python-version
commands =
    mkdir -p {toxinidir}/parts/htmlcov
    coverage run -m zope.testrunner {[testenv]integration_testpaths} --test-path=src []
    coverage html
    coverage report -m --fail-under=80

[coverage:run]
branch = True
plugins = coverage_python_version
source = src/plone/autoinclude

[coverage:report]
precision = 2
exclude_lines =
    pragma: no cover
    pragma: nocover
    except ImportError:
    raise NotImplementedError
    if __name__ == '__main__':
    self.fail
    raise AssertionError

[coverage:html]
directory = parts/htmlcov

[testenv:black]
basepython = python3
skip_install = true
deps =
    isort
    black
commands =
    isort src test-packages setup.py
    black src test-packages setup.py

[testenv:release]
basepython = python3
skip_install = true
deps =
    zest.releaser[recommended]
    plone.releaser
commands =
    fullrelease

[testenv:buildout2]
# Preferably we test this with a range of Python versions, but one will do for now.
# But let's test both zc.buildout 2 and 3.
basepython = python3
skip_install = true
deps =
    setuptools < 52
    zc.buildout < 3
commands_pre =
    python -m pip list
    {envbindir}/buildout -nc {toxinidir}/buildout.cfg buildout:directory={envdir}
commands =
    {envbindir}/test-unit {posargs:-cv}
    {envbindir}/test-integration {posargs:-cv}

[testenv:buildout3]
basepython = python3
skip_install = true
setenv =
# Work around 'TypeError: dist must be a Distribution instance' on GHA:
    SETUPTOOLS_USE_DISTUTILS = stdlib
deps =
    pip == 22.3.1
    setuptools >= 65.6.3
    zc.buildout >= 3.0.1
commands_pre =
    python -m pip list
    {envbindir}/buildout -nc {toxinidir}/buildout.cfg buildout:directory={envdir}
commands =
    {envbindir}/test-unit {posargs:-cv}
    {envbindir}/test-integration {posargs:-cv}

[testenv:z3c-pip]
# This is for testing with z3c.autoinclude and *without* plone.autoinclude.
# Note: we only need to include packages that define a standard
# z3c.autoinclude.plugin entrypoint with target plone.
# Only include the packages that have 'standard_z3c_autoinclude = True' in tests.py.
# Plus example.basetestpackage
deps =
    zope.testrunner
    z3c.autoinclude
    -e test-packages/example.basetestpackage
    -e test-packages/example.different
    -e test-packages/example.metaoverrides
    -e test-packages/example.ploneaddon
    -e test-packages/namespaceexample.native
    -e test-packages/namespaceexample.pkgutilns
# Note: z3cintegration is only included in the z3c envs.
    -e test-packages/example.z3cintegration
integration_testpaths =
# With --test-path=test-packages we find no tests.
# Only paths to the src directories work.
    --test-path=test-packages/example.different/src
    --test-path=test-packages/example.metaoverrides/src
    --test-path=test-packages/example.ploneaddon/src
    --test-path=test-packages/example.z3cintegration/src
    --test-path=test-packages/namespaceexample.native/src
    --test-path=test-packages/namespaceexample.pkgutilns/src
# Integration tests: run only the tests of the test packages.
# Do not run plone.autoinclude tests.
commands =
    zope-testrunner {[testenv:z3c-pip]integration_testpaths} []
extras =
    test

[testenv:z3c-buildout]
basepython = python3
skip_install = true
deps =
    setuptools < 52
    zc.buildout < 3
commands_pre =
    {envbindir}/buildout -nc {toxinidir}/buildoutz3c.cfg buildout:directory={envdir}
commands =
    {envbindir}/test-integration {posargs:-cv}

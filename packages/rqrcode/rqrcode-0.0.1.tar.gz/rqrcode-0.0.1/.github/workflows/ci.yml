name: CI

on:
  push:
    #branches:
      #- main
      #- master
    tags:
        - 'v*.*.*' # git tag v0.1.0; git push origin --tags 当接收到新的标签推送时，且标签名为「v*.*.*」时，就执行 Workflow。
    #   - '*'

  # pull_request:
  #   paths-ignore:
  #       - '**/*.md'
  #       - '**/*.txt'
  #       - '**/*.png'
  #       - '**/*.jpg'
  #   branches:
  #     - main
  #     - master

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: x64
      - uses: dtolnay/rust-toolchain@nightly
      - name: Build wheels - x86_64
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --sdist
      - name: Install built wheel - x86_64
        run: |
          pip install rqrcode --no-index --find-links dist --force-reinstall
          pip install pytest
          cd tests && pytest
      - name: Build wheels - universal2
        uses: PyO3/maturin-action@v1
        with:
          args: --release --universal2 --out dist
      - name: Install built wheel - universal2
        run: |
          pip install rqrcode --no-index --find-links dist --force-reinstall
          cd tests && pytest
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@nightly
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
      - name: Install built wheel
        run: |
          pip install rqrcode --no-index --find-links dist --force-reinstall
          pip install pytest
          cd tests && pytest
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
        architecture: x64
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        rust-toolchain: nightly
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out dist
    - name: Install built wheel
      if: matrix.target == 'x86_64'
      run: |
        pip install rqrcode --no-index --find-links dist --force-reinstall
        pip install pytest
        cd tests && pytest
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  linux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [aarch64, armv7, s390x, ppc64le, ppc64]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        rust-toolchain: nightly
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out dist
    - uses: uraimo/run-on-arch-action@v2.3.0
      if: matrix.target != 'ppc64'
      name: Install built wheel
      with:
        arch: ${{ matrix.target }}
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        install: |
          apt-get update
          apt-get install -y --no-install-recommends python3 python3-pip
          pip3 install -U pip pytest
        run: |
          pip3 install rqrcode --no-index --find-links dist/ --force-reinstall
          cd tests && pytest
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  musllinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-musl
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
        architecture: x64
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        rust-toolchain: nightly
        target: ${{ matrix.target }}
        manylinux: musllinux_1_2
        args: --release --out dist
    - name: Install built wheel
      if: matrix.target == 'x86_64-unknown-linux-musl'
      uses: addnab/docker-run-action@v3
      with:
        image: alpine:latest
        options: -v ${{ github.workspace }}:/io -w /io
        run: |
          apk add py3-pip
          pip3 install -U pip pytest
          pip3 install rqrcode --no-index --find-links /io/dist/ --force-reinstall
          cd tests && python3 -m pytest
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  musllinux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - target: aarch64-unknown-linux-musl
            arch: aarch64
          - target: armv7-unknown-linux-musleabihf
            arch: armv7
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        rust-toolchain: nightly
        target: ${{ matrix.platform.target }}
        manylinux: musllinux_1_2
        args: --release --out dist
    - uses: uraimo/run-on-arch-action@v2.3.0
      name: Install built wheel
      with:
        arch: ${{ matrix.platform.arch }}
        distro: alpine_latest
        githubToken: ${{ github.token }}
        install: |
          apk add py3-pip
          pip3 install -U pip pytest
        run: |
          pip3 install rqrcode --no-index --find-links dist/ --force-reinstall
          cd tests && python3 -m pytest
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, windows, linux, linux-cross, musllinux, musllinux-cross ]
    environment: pypi # https://docs.github.com/en/actions/reference/environments 使用github项目中设置的pypi环境变量
    steps:
          - name: Download wheels
            uses: actions/download-artifact@v3
            with:
              name: wheels
              path: dist

          - name: Display structure of downloaded files
            run: ls -R

          - name: Upload Release 
            uses: softprops/action-gh-release@v1
            with:
              files: dist/*
              draft: true

          # - name: Create Release
          #   id: create_release
          #   uses: actions/create-release@latest
          #   env:
          #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #   with:
          #     tag_name: ${{ github.run_number }}
          #     release_name: Release ${{ github.run_number }}

          # - name: Upload Release asset
          #   id: upload_release_asset
          #   uses: actions/upload-release-asset@latest
          #   env:
          #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #   with:
          #     upload_url: ${{ steps.create_release.outputs.upload_url }}
          #     asset_path: ./rqrcode-release.zip
          #     asset_name: rqrcode-v${{ github.run_number }}.zip
          #     asset_content_type: application/zip

          - name: Publish to PyPI
            uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
            with:
              user: __token__
              password: ${{ secrets.PYPI_API_TOKEN }}

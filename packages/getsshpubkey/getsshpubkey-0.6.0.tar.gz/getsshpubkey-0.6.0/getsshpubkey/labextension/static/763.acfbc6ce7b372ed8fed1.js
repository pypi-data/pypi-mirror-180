"use strict";(self.webpackChunkgetsshpubkey=self.webpackChunkgetsshpubkey||[]).push([[763],{763:(e,t,o)=>{o.r(t),o.d(t,{default:()=>g});var n,s=o(79),a=o(627),r=o(835),c=o(271),l=o.n(c),i=o(542),h=o(354);!function(e){e.createNew="getsshpubkey:getssh"}(n||(n={}));const u={id:"getsshpubkey:plugin",autoStart:!0,optional:[a.ISettingRegistry,s.ILauncher],activate:(e,t,o)=>{console.log("JupyterLab extension getsshpubkey is activated!");const{commands:s}=e,a=n.createNew;s.addCommand(a,{label:e=>(e.isPalette,"SSH Key"),caption:"SSH Key",icon:e=>{},execute:async e=>{(async function(e="",t={}){const o=h.ServerConnection.makeSettings(),n=i.URLExt.join(o.baseUrl,"getsshpubkey",e);let s;try{s=await h.ServerConnection.makeRequest(n,t,o)}catch(e){throw new h.ServerConnection.NetworkError(e)}let a=await s.text();if(a.length>0)try{a=JSON.parse(a)}catch(e){console.log("Not a JSON response body.",s)}if(!s.ok)throw new h.ServerConnection.ResponseError(s,a.message||a);return a})("get_ssh_pub_key",{method:"GET"}).then((e=>{return(0,r.showDialog)({title:"Public SSH key",body:(t=e.ssh,o=e.rsa,l().createElement("div",{sshkey:t,rsakey:o},l().createElement("h4",null,"SSH key, for use in Github"),"See ",l().createElement("a",{href:"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account",target:"_blank",style:{color:"grey"}},"adding ssh key"),".",l().createElement("br"),l().createElement("br"),t,l().createElement("br"),l().createElement("br"),l().createElement("h4",null,"RSA key, for use in Snowflake"),`Run \`call SET_RSA_PUBLIC_KEY('${o.split("\n").slice(1,-2)}')\` from a Snowflake worksheet.`)),focusNodeSelector:"input",buttons:[r.Dialog.cancelButton({label:"Cancel"}),r.Dialog.okButton({label:"Copy"})]}).then((t=>(console.log(t),t.button.accept?(r.Clipboard.copyToSystem(e.data),(0,r.showDialog)({body:"Copied!"})):null)));var t,o})).catch((e=>{console.error(`The getsshpubkey server extension appears to be missing.\n${e}`)}))}}),o&&o.add({command:a,category:"Other",rank:2}),t&&t.load(u.id).then((e=>{console.log("getsshpubkey settings loaded:",e.composite)})).catch((e=>{console.error("Failed to load settings for getsshpubkey.",e)}))}},g=u}}]);
import Adifpy
exit()
import Adifpy
exit()
import Adifpy
import Adifpy.test as t
t.__all__
t
t.__dict__
exit()
import Adifpy
exit()
    from Adifpy.differentiate.dual_number import DualNumber
from Adifpy.differentiate.dual_number import DualNumber
exit()
from Adifpy.differentiate.dual_number import DualNumber
exit()
from Adifpy.differentiate.evaluator import Evaluator
fn = lambda x: x*x
evalu = Evaluator(fn=fn)
evalu
evalu.eval(1)
print(evalu.eval(1))
evalu.eval(1, force_mode='forward')
from Adifpy.differentiate.evaluator
evalu.eval(1, force_mode='forward')
exit()
from Adifpy.differentiate.evaluator import Evaluator
evalu = Evaluator(lambda x: x*x)
evalu.eval(1, force_mode='forward')
exit()
from Adifpy.differentiate.evaluator import Evaluator
eval = evaluator(lambda x: x**2)
eval = Evaluator(lambda x: x**2)
eval.eval(3)
eval.eval(3, force_mode='forward')
eval.eval(3, seed_vector=2, force_mode='forward')
exit()

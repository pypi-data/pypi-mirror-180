# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: scann/partitioning/linear_projection_tree.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='scann/partitioning/linear_projection_tree.proto',
  package='research_scann',
  syntax='proto2',
  serialized_options=None,
  serialized_pb=_b('\n/scann/partitioning/linear_projection_tree.proto\x12\x0eresearch_scann\"\x91\x04\n\x1eSerializedLinearProjectionTree\x12\x41\n\x04root\x18\x01 \x01(\x0b\x32\x33.research_scann.SerializedLinearProjectionTree.Node\x1a\xab\x03\n\x04Node\x12U\n\x08non_leaf\x18\x01 \x01(\x0b\x32\x41.research_scann.SerializedLinearProjectionTree.Node.NonLeafFieldsH\x00\x12N\n\x04leaf\x18\x02 \x01(\x0b\x32>.research_scann.SerializedLinearProjectionTree.Node.LeafFieldsH\x00\x1a\xc4\x01\n\rNonLeafFields\x12\x19\n\x11projection_vector\x18\x01 \x03(\x02\x12\x11\n\tthreshold\x18\x02 \x01(\x02\x12\x41\n\x04left\x18\x03 \x01(\x0b\x32\x33.research_scann.SerializedLinearProjectionTree.Node\x12\x42\n\x05right\x18\x04 \x01(\x0b\x32\x33.research_scann.SerializedLinearProjectionTree.Node\x1a!\n\nLeafFields\x12\x13\n\x0bleaf_number\x18\x05 \x01(\x05\x42\x12\n\x10leaf_or_non_leaf')
)




_SERIALIZEDLINEARPROJECTIONTREE_NODE_NONLEAFFIELDS = _descriptor.Descriptor(
  name='NonLeafFields',
  full_name='research_scann.SerializedLinearProjectionTree.Node.NonLeafFields',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='projection_vector', full_name='research_scann.SerializedLinearProjectionTree.Node.NonLeafFields.projection_vector', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='threshold', full_name='research_scann.SerializedLinearProjectionTree.Node.NonLeafFields.threshold', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='left', full_name='research_scann.SerializedLinearProjectionTree.Node.NonLeafFields.left', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='right', full_name='research_scann.SerializedLinearProjectionTree.Node.NonLeafFields.right', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=346,
  serialized_end=542,
)

_SERIALIZEDLINEARPROJECTIONTREE_NODE_LEAFFIELDS = _descriptor.Descriptor(
  name='LeafFields',
  full_name='research_scann.SerializedLinearProjectionTree.Node.LeafFields',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='leaf_number', full_name='research_scann.SerializedLinearProjectionTree.Node.LeafFields.leaf_number', index=0,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=544,
  serialized_end=577,
)

_SERIALIZEDLINEARPROJECTIONTREE_NODE = _descriptor.Descriptor(
  name='Node',
  full_name='research_scann.SerializedLinearProjectionTree.Node',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='non_leaf', full_name='research_scann.SerializedLinearProjectionTree.Node.non_leaf', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='leaf', full_name='research_scann.SerializedLinearProjectionTree.Node.leaf', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_SERIALIZEDLINEARPROJECTIONTREE_NODE_NONLEAFFIELDS, _SERIALIZEDLINEARPROJECTIONTREE_NODE_LEAFFIELDS, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='leaf_or_non_leaf', full_name='research_scann.SerializedLinearProjectionTree.Node.leaf_or_non_leaf',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=170,
  serialized_end=597,
)

_SERIALIZEDLINEARPROJECTIONTREE = _descriptor.Descriptor(
  name='SerializedLinearProjectionTree',
  full_name='research_scann.SerializedLinearProjectionTree',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='root', full_name='research_scann.SerializedLinearProjectionTree.root', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_SERIALIZEDLINEARPROJECTIONTREE_NODE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=68,
  serialized_end=597,
)

_SERIALIZEDLINEARPROJECTIONTREE_NODE_NONLEAFFIELDS.fields_by_name['left'].message_type = _SERIALIZEDLINEARPROJECTIONTREE_NODE
_SERIALIZEDLINEARPROJECTIONTREE_NODE_NONLEAFFIELDS.fields_by_name['right'].message_type = _SERIALIZEDLINEARPROJECTIONTREE_NODE
_SERIALIZEDLINEARPROJECTIONTREE_NODE_NONLEAFFIELDS.containing_type = _SERIALIZEDLINEARPROJECTIONTREE_NODE
_SERIALIZEDLINEARPROJECTIONTREE_NODE_LEAFFIELDS.containing_type = _SERIALIZEDLINEARPROJECTIONTREE_NODE
_SERIALIZEDLINEARPROJECTIONTREE_NODE.fields_by_name['non_leaf'].message_type = _SERIALIZEDLINEARPROJECTIONTREE_NODE_NONLEAFFIELDS
_SERIALIZEDLINEARPROJECTIONTREE_NODE.fields_by_name['leaf'].message_type = _SERIALIZEDLINEARPROJECTIONTREE_NODE_LEAFFIELDS
_SERIALIZEDLINEARPROJECTIONTREE_NODE.containing_type = _SERIALIZEDLINEARPROJECTIONTREE
_SERIALIZEDLINEARPROJECTIONTREE_NODE.oneofs_by_name['leaf_or_non_leaf'].fields.append(
  _SERIALIZEDLINEARPROJECTIONTREE_NODE.fields_by_name['non_leaf'])
_SERIALIZEDLINEARPROJECTIONTREE_NODE.fields_by_name['non_leaf'].containing_oneof = _SERIALIZEDLINEARPROJECTIONTREE_NODE.oneofs_by_name['leaf_or_non_leaf']
_SERIALIZEDLINEARPROJECTIONTREE_NODE.oneofs_by_name['leaf_or_non_leaf'].fields.append(
  _SERIALIZEDLINEARPROJECTIONTREE_NODE.fields_by_name['leaf'])
_SERIALIZEDLINEARPROJECTIONTREE_NODE.fields_by_name['leaf'].containing_oneof = _SERIALIZEDLINEARPROJECTIONTREE_NODE.oneofs_by_name['leaf_or_non_leaf']
_SERIALIZEDLINEARPROJECTIONTREE.fields_by_name['root'].message_type = _SERIALIZEDLINEARPROJECTIONTREE_NODE
DESCRIPTOR.message_types_by_name['SerializedLinearProjectionTree'] = _SERIALIZEDLINEARPROJECTIONTREE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SerializedLinearProjectionTree = _reflection.GeneratedProtocolMessageType('SerializedLinearProjectionTree', (_message.Message,), {

  'Node' : _reflection.GeneratedProtocolMessageType('Node', (_message.Message,), {

    'NonLeafFields' : _reflection.GeneratedProtocolMessageType('NonLeafFields', (_message.Message,), {
      'DESCRIPTOR' : _SERIALIZEDLINEARPROJECTIONTREE_NODE_NONLEAFFIELDS,
      '__module__' : 'scann.partitioning.linear_projection_tree_pb2'
      # @@protoc_insertion_point(class_scope:research_scann.SerializedLinearProjectionTree.Node.NonLeafFields)
      })
    ,

    'LeafFields' : _reflection.GeneratedProtocolMessageType('LeafFields', (_message.Message,), {
      'DESCRIPTOR' : _SERIALIZEDLINEARPROJECTIONTREE_NODE_LEAFFIELDS,
      '__module__' : 'scann.partitioning.linear_projection_tree_pb2'
      # @@protoc_insertion_point(class_scope:research_scann.SerializedLinearProjectionTree.Node.LeafFields)
      })
    ,
    'DESCRIPTOR' : _SERIALIZEDLINEARPROJECTIONTREE_NODE,
    '__module__' : 'scann.partitioning.linear_projection_tree_pb2'
    # @@protoc_insertion_point(class_scope:research_scann.SerializedLinearProjectionTree.Node)
    })
  ,
  'DESCRIPTOR' : _SERIALIZEDLINEARPROJECTIONTREE,
  '__module__' : 'scann.partitioning.linear_projection_tree_pb2'
  # @@protoc_insertion_point(class_scope:research_scann.SerializedLinearProjectionTree)
  })
_sym_db.RegisterMessage(SerializedLinearProjectionTree)
_sym_db.RegisterMessage(SerializedLinearProjectionTree.Node)
_sym_db.RegisterMessage(SerializedLinearProjectionTree.Node.NonLeafFields)
_sym_db.RegisterMessage(SerializedLinearProjectionTree.Node.LeafFields)


# @@protoc_insertion_point(module_scope)

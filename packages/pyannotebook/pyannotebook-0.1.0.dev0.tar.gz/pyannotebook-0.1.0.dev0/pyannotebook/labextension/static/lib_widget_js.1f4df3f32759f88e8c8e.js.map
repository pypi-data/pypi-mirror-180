{"version":3,"file":"lib_widget_js.1f4df3f32759f88e8c8e.js","mappings":";;;;;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,GAAG,sBAAsB;AAC5C;AACA;AACA;AACA,aAAa,mBAAO,CAAC,uCAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,mBAAmB;AACnB;;;;;;;;;;;ACvCa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB,GAAG,mBAAmB,GAAG,sBAAsB,GAAG,uBAAuB;AAC3F,eAAe,mBAAO,CAAC,oFAAuB;AAC9C,kBAAkB,mBAAO,CAAC,mCAAW;AACrC,mBAAO,CAAC,2CAAmB;AAC3B,wCAAwC,mBAAO,CAAC,kFAAe;AAC/D,kCAAkC,mBAAO,CAAC,kGAAkC;AAC5E,kCAAkC,mBAAO,CAAC,kGAAkC;AAC5E;AACA;AACA,6CAA6C,uBAAuB,gSAAgS;AACpW;AACA;AACA,uBAAuB;AACvB,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qBAAqB;AACnD,aAAa;AACbaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,6CAA6C,uBAAuB,wQAAwQ;AAC5U;AACA;AACA,mBAAmB;AACnB,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;;;;;;;;;ACtYA;AACA,kCAAkC,mBAAO,CAAC,qGAAgD;AAC1F;AACA;AACA,8CAA8C,sBAAsB,iBAAiB,GAAG,wBAAwB,iBAAiB,wBAAwB,2BAA2B,GAAG,+BAA+B,0IAA0I,6BAA6B,GAAG,wCAAwC,wBAAwB,2BAA2B,GAAG,wCAAwC,wBAAwB,2BAA2B,GAAG,wCAAwC,wBAAwB,2BAA2B,GAAG,wCAAwC,wBAAwB,2BAA2B,GAAG,wCAAwC,wBAAwB,2BAA2B,GAAG,wCAAwC,wBAAwB,2BAA2B,GAAG,wCAAwC,wBAAwB,2BAA2B,GAAG,wCAAwC,wBAAwB,2BAA2B,GAAG,wCAAwC,wBAAwB,2BAA2B,GAAG,wCAAwC,wBAAwB,2BAA2B,GAAG,4BAA4B,sBAAsB,qBAAqB,kBAAkB,GAAG,mBAAmB,sBAAsB,uBAAuB,qBAAqB,wBAAwB,sBAAsB,sBAAsB,uBAAuB,GAAG,qBAAqB,4BAA4B,wBAAwB,wBAAwB,uBAAuB,sBAAsB,GAAG,0BAA0B,wBAAwB,sBAAsB,wBAAwB,GAAG,kBAAkB,4BAA4B,sBAAsB,wBAAwB,GAAG;AAC94D;AACA;;;;;;;;;;;ACNA,UAAU,mBAAO,CAAC,oJAAwE;AAC1F,0BAA0B,mBAAO,CAAC,qHAAuD;;AAEzF;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;AAIA","sources":["webpack://pyannotebook/./lib/version.js","webpack://pyannotebook/./lib/widget.js","webpack://pyannotebook/./css/widget.css","webpack://pyannotebook/./css/widget.css?a195"],"sourcesContent":["\"use strict\";\n// MIT License\n//\n// Copyright (c) 2022- CNRS\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MODULE_NAME = exports.MODULE_VERSION = void 0;\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst data = require('../package.json');\n/**\n * The _model_module_version/_view_module_version this package implements.\n *\n * The html widget manager assumes that this is the same as the npm package\n * version number.\n */\nexports.MODULE_VERSION = data.version;\n/*\n * The current package name.\n */\nexports.MODULE_NAME = data.name;\n//# sourceMappingURL=version.js.map","\"use strict\";\n// MIT License\n//\n// Copyright (c) 2022- CNRS\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LabelsView = exports.LabelsModel = exports.WavesurferView = exports.WavesurferModel = void 0;\nconst base_1 = require(\"@jupyter-widgets/base\");\nconst version_1 = require(\"./version\");\nrequire(\"../css/widget.css\");\nconst wavesurfer_js_1 = __importDefault(require(\"wavesurfer.js\"));\nconst regions_1 = __importDefault(require(\"wavesurfer.js/src/plugin/regions\"));\nconst minimap_1 = __importDefault(require(\"wavesurfer.js/src/plugin/minimap\"));\nclass WavesurferModel extends base_1.DOMWidgetModel {\n    defaults() {\n        return Object.assign(Object.assign({}, super.defaults()), { _model_name: WavesurferModel.model_name, _model_module: WavesurferModel.model_module, _model_module_version: WavesurferModel.model_module_version, _view_name: WavesurferModel.view_name, _view_module: WavesurferModel.view_module, _view_module_version: WavesurferModel.view_module_version });\n    }\n}\nexports.WavesurferModel = WavesurferModel;\nWavesurferModel.serializers = Object.assign({}, base_1.DOMWidgetModel.serializers);\nWavesurferModel.model_name = 'WavesurferModel';\nWavesurferModel.model_module = version_1.MODULE_NAME;\nWavesurferModel.model_module_version = version_1.MODULE_VERSION;\nWavesurferModel.view_name = 'WavesurferView';\nWavesurferModel.view_module = version_1.MODULE_NAME;\nWavesurferModel.view_module_version = version_1.MODULE_VERSION;\nclass WavesurferView extends base_1.DOMWidgetView {\n    to_blob(b64) {\n        // https://stackoverflow.com/questions/27980612/converting-base64-to-blob-in-javascript\n        // https://ionic.io/blog/converting-a-base64-string-to-a-blob-in-javascript\n        const byteString = atob(b64.split(',')[1]);\n        const ab = new ArrayBuffer(byteString.length);\n        const ia = new Uint8Array(ab);\n        for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        return new Blob([ab], { type: 'audio/x-wav' });\n    }\n    render() {\n        this.wavesurfer_minimap = document.createElement('div');\n        this.wavesurfer_container = document.createElement('div');\n        this.el.appendChild(this.wavesurfer_minimap);\n        this.el.appendChild(this.wavesurfer_container);\n        this._wavesurfer = wavesurfer_js_1.default.create({\n            container: this.wavesurfer_container,\n            autoCenterImmediately: true,\n            barGap: 1,\n            barHeight: 1,\n            // barMinHeight: null,\n            barRadius: 2,\n            barWidth: 2,\n            scrollParent: true,\n            minPxPerSec: 20,\n            plugins: [\n                regions_1.default.create({\n                    regionsMinLength: 0,\n                    /** Enable creating regions by dragging with the mouse. */\n                    dragSelection: true,\n                    /** Regions that should be added upon initialisation. */\n                    regions: undefined,\n                    /** The sensitivity of the mouse dragging (default: 2). */\n                    slop: 2,\n                    /** Snap the regions to a grid of the specified multiples in seconds? */\n                    snapToGridInterval: undefined,\n                    /** Shift the snap-to-grid by the specified seconds. May also be negative. */\n                    snapToGridOffset: undefined,\n                    /** Maximum number of regions that may be created by the user at one time. */\n                    maxRegions: undefined,\n                    /** Allows custom formating for region tooltip. */\n                    formatTimeCallback: undefined,\n                    /** from container edges' Optional width for edgeScroll to start (default: 5% of viewport width). */\n                    edgeScrollWidth: undefined,\n                }),\n                minimap_1.default.create({\n                    container: this.wavesurfer_minimap,\n                    waveColor: '#777',\n                    progressColor: '#222',\n                    height: 20,\n                }),\n            ],\n        });\n        this._wavesurfer.on('region-update-end', this.on_region_update_end.bind(this));\n        this._wavesurfer.on('region-created', this.on_region_created.bind(this));\n        this._wavesurfer.on('audioprocess', this.on_audioprocess.bind(this));\n        this._wavesurfer.on('seek', this.on_seek.bind(this));\n        this._wavesurfer.on('finish', this.on_finish.bind(this));\n        this._wavesurfer.on('region-click', this.on_region_click.bind(this));\n        this._wavesurfer.on('zoom', this.on_zoom.bind(this));\n        this.update_audio();\n        this.model.on('change:audio', this.update_audio, this);\n        this.model.on('change:regions', this.update_regions, this);\n        this.model.on('change:colors', this.update_colors, this);\n        this.model.on('change:overlap', this.update_overlap, this);\n        this.model.on('change:playing', this.update_playing, this);\n        this.model.on('change:time', this.update_time, this);\n        this.model.on('change:active_region', this.update_active_region, this);\n        this.model.on('change:zoom', this.update_zoom, this);\n        // this._wavesurfer.zoom();\n    }\n    push_regions() {\n        const regions = this._wavesurfer.regions.list;\n        const region_ids = Object.keys(regions);\n        const _regions = [];\n        for (const region_id of region_ids) {\n            const region = regions[region_id];\n            _regions.push({\n                start: region.start,\n                end: region.end,\n                id: region_id,\n                label: region.attributes.label,\n            });\n        }\n        this._syncing_regions = true;\n        this.model.set('regions', _regions);\n        this.touch();\n        this._syncing_regions = false;\n    }\n    update_audio() {\n        const blob = this.to_blob(this.model.get('audio'));\n        this._wavesurfer.loadBlob(blob);\n        this._wavesurfer.clearRegions();\n    }\n    update_regions() {\n        if (this._syncing_regions) {\n            return;\n        }\n        const regions = this.model.get('regions');\n        this._adding_regions = true;\n        this._wavesurfer.clearRegions();\n        for (const region of regions) {\n            this._wavesurfer.addRegion({\n                start: region.start,\n                end: region.end,\n                id: region.id,\n                attributes: { label: region.label },\n            });\n        }\n        this._adding_regions = false;\n        this.update_colors();\n        this.update_active_region();\n        this.update_overlap();\n        this.update_label_visibility();\n    }\n    update_colors() {\n        const regions = this.model.get('regions');\n        const colors = this.model.get('colors');\n        const wavesurfer_regions = this._wavesurfer.regions.list;\n        for (const region of regions) {\n            wavesurfer_regions[region['id']].element.style.backgroundColor =\n                colors[region['label']];\n        }\n    }\n    update_active_region() {\n        const regions = this.model.get('regions');\n        const active_region = this.model.get('active_region');\n        const wavesurfer_regions = this._wavesurfer.regions.list;\n        for (const region of regions) {\n            if (region['id'] === active_region) {\n                wavesurfer_regions[region['id']].element.classList.add('wavesurfer-region-active');\n            }\n            else {\n                wavesurfer_regions[region['id']].element.classList.remove('wavesurfer-region-active');\n            }\n        }\n    }\n    update_overlap() {\n        const regions = this.model.get('regions');\n        const overlap = this.model.get('overlap');\n        const wavesurfer_regions = this._wavesurfer.regions.list;\n        for (const region of regions) {\n            const wavesurfer_region = wavesurfer_regions[region['id']].element;\n            for (const class_name of wavesurfer_region.className.split(' ')) {\n                if (class_name.startsWith('wavesurfer-region-overlapping')) {\n                    wavesurfer_region.classList.remove(class_name);\n                }\n            }\n            if (region.id in overlap) {\n                wavesurfer_region.classList.add('wavesurfer-region-overlapping-' +\n                    overlap[region.id].level +\n                    '-' +\n                    overlap[region.id].num_levels);\n            }\n        }\n    }\n    update_label_visibility() {\n        const regions = this.model.get('regions');\n        const wavesurfer_regions = this._wavesurfer.regions.list;\n        for (const region of regions) {\n            const wavesurfer_region = wavesurfer_regions[region['id']].element;\n            const tag = wavesurfer_region.querySelector('.wavesurfer-region-tag');\n            if (tag !== null) {\n                tag.style.display = 'inline';\n                tag.style.display =\n                    tag.getBoundingClientRect().width >\n                        0.9 * wavesurfer_region.getBoundingClientRect().width\n                        ? 'none'\n                        : 'inline';\n            }\n        }\n    }\n    update_playing() {\n        if (this.model.get('playing')) {\n            this._wavesurfer.play();\n        }\n        else {\n            this._wavesurfer.pause();\n        }\n    }\n    update_time() {\n        if (!this.model.get('playing')) {\n            this._wavesurfer.setCurrentTime(this.model.get('time'));\n        }\n    }\n    update_zoom() {\n        const zoom = this.model.get('zoom');\n        this._wavesurfer.zoom(zoom);\n        this.update_colors();\n        this.update_label_visibility();\n    }\n    // FIXME: find correct type for `created_region`\n    on_region_created(created_region) {\n        let label;\n        if ('label' in created_region.attributes) {\n            label = created_region.attributes.label;\n        }\n        else {\n            label = this.model.get('active_label');\n            created_region.attributes.label = label;\n        }\n        const tag = document.createElement('span');\n        tag.textContent = label.toUpperCase();\n        tag.classList.add('wavesurfer-region-tag');\n        const r = created_region.element;\n        r.appendChild(tag);\n        if (!this._adding_regions) {\n            this.model.set('active_region', created_region.id);\n            this.touch();\n        }\n    }\n    // FIXME: find correct type for `created_region`\n    on_region_update_end(updated_region) {\n        const wavesurfer_regions = this._wavesurfer.regions.list;\n        const region_ids = Object.keys(wavesurfer_regions);\n        const regions = [];\n        for (const region_id of region_ids) {\n            const region = wavesurfer_regions[region_id];\n            regions.push({\n                start: region.start,\n                end: region.end,\n                id: region_id,\n                label: region.attributes.label,\n            });\n        }\n        this._syncing_regions = true;\n        this.model.set('regions', regions);\n        this.touch();\n        this._syncing_regions = false;\n        this.update_active_region();\n        this.update_colors();\n        this.update_overlap();\n        this.update_label_visibility();\n    }\n    on_audioprocess() {\n        this.model.set('time', this._wavesurfer.getCurrentTime());\n        this.touch();\n    }\n    on_seek(progress) {\n        this.model.set('time', this._wavesurfer.getCurrentTime());\n        this.touch();\n    }\n    on_zoom(minPxPerSec) {\n        console.log('minPxPerSec', minPxPerSec);\n        this.update_label_visibility();\n    }\n    on_finish() {\n        this.model.set('playing', false);\n        this.touch();\n    }\n    // FIXME: find correct type for `region`\n    on_region_click(region) {\n        let active_region;\n        if (region.id === this.model.get('active_region')) {\n            active_region = '';\n        }\n        else {\n            active_region = region.id;\n        }\n        this.model.set('active_region', active_region);\n        this.touch();\n    }\n}\nexports.WavesurferView = WavesurferView;\nclass LabelsModel extends base_1.DOMWidgetModel {\n    defaults() {\n        return Object.assign(Object.assign({}, super.defaults()), { _model_name: LabelsModel.model_name, _model_module: LabelsModel.model_module, _model_module_version: LabelsModel.model_module_version, _view_name: LabelsModel.view_name, _view_module: LabelsModel.view_module, _view_module_version: LabelsModel.view_module_version });\n    }\n}\nexports.LabelsModel = LabelsModel;\nLabelsModel.serializers = Object.assign({}, base_1.DOMWidgetModel.serializers);\nLabelsModel.model_name = 'LabelsModel';\nLabelsModel.model_module = version_1.MODULE_NAME;\nLabelsModel.model_module_version = version_1.MODULE_VERSION;\nLabelsModel.view_name = 'LabelsView';\nLabelsModel.view_module = version_1.MODULE_NAME;\nLabelsModel.view_module_version = version_1.MODULE_VERSION;\nclass LabelsView extends base_1.DOMWidgetView {\n    render() {\n        this.container = document.createElement('div');\n        this.el.appendChild(this.container);\n        this.update_labels();\n        this.model.on('change:labels', this.update_labels, this);\n        this.model.on('change:colors', this.update_labels, this);\n        this.model.on('change:active_label', this.update_labels, this);\n    }\n    update_labels() {\n        const labels = this.model.get('labels');\n        const colors = this.model.get('colors');\n        const active_label = this.model.get('active_label');\n        this.container.textContent = '';\n        for (const idx of Object.keys(labels)) {\n            const button = document.createElement('button');\n            button.style.backgroundColor = colors[idx];\n            button.classList.add('label-button');\n            if (idx === active_label) {\n                button.classList.add('label-button-active');\n            }\n            const shortcut = document.createElement('span');\n            shortcut.style.backgroundColor = 'white';\n            shortcut.classList.add('label-shortcut');\n            if (idx === active_label) {\n                shortcut.classList.add('label-button-active');\n            }\n            shortcut.textContent = idx.toUpperCase();\n            button.appendChild(shortcut);\n            const label = document.createElement('input');\n            label.classList.add('label-input');\n            label.value = labels[idx];\n            label.addEventListener('keypress', this.save_label_on_enter(label, idx));\n            button.appendChild(label);\n            button.addEventListener('click', this.activate(idx));\n            this.container.appendChild(button);\n        }\n    }\n    activate(idx) {\n        return (event) => {\n            this.model.set('active_label', idx);\n            this.touch();\n        };\n    }\n    save_label_on_enter(label, idx) {\n        return (event) => {\n            if (event.key === 'Enter') {\n                event.preventDefault();\n                const new_labels = Object();\n                const old_labels = this.model.get('labels');\n                for (const i in old_labels) {\n                    if (i === idx) {\n                        new_labels[i] = label.value;\n                    }\n                    else {\n                        new_labels[i] = old_labels[i];\n                    }\n                }\n                this.model.set('labels', new_labels);\n                this.touch();\n            }\n        };\n    }\n}\nexports.LabelsView = LabelsView;\n//# sourceMappingURL=widget.js.map","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".wavesurfer-handle {\\n  border-width: 1px;\\n  opacity: 50%;\\n}\\n\\n.wavesurfer-region {\\n  opacity: 80%;\\n  top: 10% !important;\\n  height: 80% !important;\\n}\\n\\n.wavesurfer-region-active {\\n  background: repeating-linear-gradient(\\n    45deg,\\n    transparent,\\n    transparent 10px,\\n    #ffffff 10px,\\n    #ffffff 15px\\n  );\\n  z-index: 1000 !important;\\n}\\n\\n.wavesurfer-region-overlapping-1-1 {\\n  top: 10% !important;\\n  height: 80% !important;\\n}\\n\\n.wavesurfer-region-overlapping-1-2 {\\n  top: 10% !important;\\n  height: 70% !important;\\n}\\n\\n.wavesurfer-region-overlapping-2-2 {\\n  top: 20% !important;\\n  height: 70% !important;\\n}\\n\\n.wavesurfer-region-overlapping-1-3 {\\n  top: 10% !important;\\n  height: 60% !important;\\n}\\n\\n.wavesurfer-region-overlapping-2-3 {\\n  top: 20% !important;\\n  height: 60% !important;\\n}\\n\\n.wavesurfer-region-overlapping-3-3 {\\n  top: 30% !important;\\n  height: 60% !important;\\n}\\n\\n.wavesurfer-region-overlapping-1-4 {\\n  top: 10% !important;\\n  height: 50% !important;\\n}\\n\\n.wavesurfer-region-overlapping-2-4 {\\n  top: 20% !important;\\n  height: 50% !important;\\n}\\n\\n.wavesurfer-region-overlapping-3-4 {\\n  top: 30% !important;\\n  height: 50% !important;\\n}\\n\\n.wavesurfer-region-overlapping-4-4 {\\n  top: 40% !important;\\n  height: 50% !important;\\n}\\n\\n.wavesurfer-region-tag {\\n  padding-left: 4px;\\n  padding-top: 4px;\\n  opacity: 100%;\\n}\\n\\n.label-button {\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n  border-width: 0px;\\n  margin-right: 5px;\\n  margin-bottom: 5px;\\n}\\n\\n.label-shortcut {\\n  background-color: white;\\n  /* margin-top: 5px; */\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  margin-right: 5px;\\n}\\n\\n.label-button-active {\\n  border-style: solid;\\n  border-width: 1px;\\n  border-color: black;\\n}\\n\\n.label-input {\\n  background: transparent;\\n  border-width: 0px;\\n  border-style: solid;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js!./widget.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":[],"sourceRoot":""}
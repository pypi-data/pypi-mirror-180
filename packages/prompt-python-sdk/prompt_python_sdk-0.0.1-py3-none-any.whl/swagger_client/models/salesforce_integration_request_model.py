# coding: utf-8

"""
    Prompt.io APIs

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SalesforceIntegrationRequestModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'salesforce_login': 'str',
        'salesforce_password': 'str',
        'environment': 'str'
    }

    attribute_map = {
        'salesforce_login': 'salesforceLogin',
        'salesforce_password': 'salesforcePassword',
        'environment': 'environment'
    }

    def __init__(self, salesforce_login=None, salesforce_password=None, environment=None):  # noqa: E501
        """SalesforceIntegrationRequestModel - a model defined in Swagger"""  # noqa: E501
        self._salesforce_login = None
        self._salesforce_password = None
        self._environment = None
        self.discriminator = None
        if salesforce_login is not None:
            self.salesforce_login = salesforce_login
        if salesforce_password is not None:
            self.salesforce_password = salesforce_password
        if environment is not None:
            self.environment = environment

    @property
    def salesforce_login(self):
        """Gets the salesforce_login of this SalesforceIntegrationRequestModel.  # noqa: E501

        Salesforce login  # noqa: E501

        :return: The salesforce_login of this SalesforceIntegrationRequestModel.  # noqa: E501
        :rtype: str
        """
        return self._salesforce_login

    @salesforce_login.setter
    def salesforce_login(self, salesforce_login):
        """Sets the salesforce_login of this SalesforceIntegrationRequestModel.

        Salesforce login  # noqa: E501

        :param salesforce_login: The salesforce_login of this SalesforceIntegrationRequestModel.  # noqa: E501
        :type: str
        """

        self._salesforce_login = salesforce_login

    @property
    def salesforce_password(self):
        """Gets the salesforce_password of this SalesforceIntegrationRequestModel.  # noqa: E501

        Salesforce password combined with the security token. example: MyPasswordMyToken  # noqa: E501

        :return: The salesforce_password of this SalesforceIntegrationRequestModel.  # noqa: E501
        :rtype: str
        """
        return self._salesforce_password

    @salesforce_password.setter
    def salesforce_password(self, salesforce_password):
        """Sets the salesforce_password of this SalesforceIntegrationRequestModel.

        Salesforce password combined with the security token. example: MyPasswordMyToken  # noqa: E501

        :param salesforce_password: The salesforce_password of this SalesforceIntegrationRequestModel.  # noqa: E501
        :type: str
        """

        self._salesforce_password = salesforce_password

    @property
    def environment(self):
        """Gets the environment of this SalesforceIntegrationRequestModel.  # noqa: E501

        Salesforce environment: prod/test. default is 'prod'  # noqa: E501

        :return: The environment of this SalesforceIntegrationRequestModel.  # noqa: E501
        :rtype: str
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this SalesforceIntegrationRequestModel.

        Salesforce environment: prod/test. default is 'prod'  # noqa: E501

        :param environment: The environment of this SalesforceIntegrationRequestModel.  # noqa: E501
        :type: str
        """

        self._environment = environment

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SalesforceIntegrationRequestModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SalesforceIntegrationRequestModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

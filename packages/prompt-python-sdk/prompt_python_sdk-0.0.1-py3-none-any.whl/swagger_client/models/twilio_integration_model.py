# coding: utf-8

"""
    Prompt.io APIs

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class TwilioIntegrationModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'twilio_account_sid': 'str',
        'twilio_auth_token': 'str',
        'clnpc_approved': 'bool'
    }

    attribute_map = {
        'twilio_account_sid': 'twilioAccountSID',
        'twilio_auth_token': 'twilioAuthToken',
        'clnpc_approved': 'clnpcApproved'
    }

    def __init__(self, twilio_account_sid=None, twilio_auth_token=None, clnpc_approved=None):  # noqa: E501
        """TwilioIntegrationModel - a model defined in Swagger"""  # noqa: E501
        self._twilio_account_sid = None
        self._twilio_auth_token = None
        self._clnpc_approved = None
        self.discriminator = None
        if twilio_account_sid is not None:
            self.twilio_account_sid = twilio_account_sid
        if twilio_auth_token is not None:
            self.twilio_auth_token = twilio_auth_token
        if clnpc_approved is not None:
            self.clnpc_approved = clnpc_approved

    @property
    def twilio_account_sid(self):
        """Gets the twilio_account_sid of this TwilioIntegrationModel.  # noqa: E501

        Twilio Account SID  # noqa: E501

        :return: The twilio_account_sid of this TwilioIntegrationModel.  # noqa: E501
        :rtype: str
        """
        return self._twilio_account_sid

    @twilio_account_sid.setter
    def twilio_account_sid(self, twilio_account_sid):
        """Sets the twilio_account_sid of this TwilioIntegrationModel.

        Twilio Account SID  # noqa: E501

        :param twilio_account_sid: The twilio_account_sid of this TwilioIntegrationModel.  # noqa: E501
        :type: str
        """

        self._twilio_account_sid = twilio_account_sid

    @property
    def twilio_auth_token(self):
        """Gets the twilio_auth_token of this TwilioIntegrationModel.  # noqa: E501

        Twilio Auth Token  # noqa: E501

        :return: The twilio_auth_token of this TwilioIntegrationModel.  # noqa: E501
        :rtype: str
        """
        return self._twilio_auth_token

    @twilio_auth_token.setter
    def twilio_auth_token(self, twilio_auth_token):
        """Sets the twilio_auth_token of this TwilioIntegrationModel.

        Twilio Auth Token  # noqa: E501

        :param twilio_auth_token: The twilio_auth_token of this TwilioIntegrationModel.  # noqa: E501
        :type: str
        """

        self._twilio_auth_token = twilio_auth_token

    @property
    def clnpc_approved(self):
        """Gets the clnpc_approved of this TwilioIntegrationModel.  # noqa: E501

        CLNPC approval has been received from Twilio for scrubbing Canadian numbers  # noqa: E501

        :return: The clnpc_approved of this TwilioIntegrationModel.  # noqa: E501
        :rtype: bool
        """
        return self._clnpc_approved

    @clnpc_approved.setter
    def clnpc_approved(self, clnpc_approved):
        """Sets the clnpc_approved of this TwilioIntegrationModel.

        CLNPC approval has been received from Twilio for scrubbing Canadian numbers  # noqa: E501

        :param clnpc_approved: The clnpc_approved of this TwilioIntegrationModel.  # noqa: E501
        :type: bool
        """

        self._clnpc_approved = clnpc_approved

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(TwilioIntegrationModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TwilioIntegrationModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

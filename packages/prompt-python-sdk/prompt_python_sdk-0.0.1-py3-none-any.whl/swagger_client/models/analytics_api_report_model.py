# coding: utf-8

"""
    Prompt.io APIs

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class AnalyticsApiReportModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'timestamp_epoch': 'int',
        'api_calls_success': 'int',
        'api_calls4xx': 'int',
        'api_calls5xx': 'int',
        'api_calls_total': 'int'
    }

    attribute_map = {
        'timestamp_epoch': 'timestampEpoch',
        'api_calls_success': 'apiCallsSuccess',
        'api_calls4xx': 'apiCalls4xx',
        'api_calls5xx': 'apiCalls5xx',
        'api_calls_total': 'apiCallsTotal'
    }

    def __init__(self, timestamp_epoch=None, api_calls_success=None, api_calls4xx=None, api_calls5xx=None, api_calls_total=None):  # noqa: E501
        """AnalyticsApiReportModel - a model defined in Swagger"""  # noqa: E501
        self._timestamp_epoch = None
        self._api_calls_success = None
        self._api_calls4xx = None
        self._api_calls5xx = None
        self._api_calls_total = None
        self.discriminator = None
        if timestamp_epoch is not None:
            self.timestamp_epoch = timestamp_epoch
        if api_calls_success is not None:
            self.api_calls_success = api_calls_success
        if api_calls4xx is not None:
            self.api_calls4xx = api_calls4xx
        if api_calls5xx is not None:
            self.api_calls5xx = api_calls5xx
        if api_calls_total is not None:
            self.api_calls_total = api_calls_total

    @property
    def timestamp_epoch(self):
        """Gets the timestamp_epoch of this AnalyticsApiReportModel.  # noqa: E501

        The timestamp at the start of the default group-by window as a Unix timestamp  # noqa: E501

        :return: The timestamp_epoch of this AnalyticsApiReportModel.  # noqa: E501
        :rtype: int
        """
        return self._timestamp_epoch

    @timestamp_epoch.setter
    def timestamp_epoch(self, timestamp_epoch):
        """Sets the timestamp_epoch of this AnalyticsApiReportModel.

        The timestamp at the start of the default group-by window as a Unix timestamp  # noqa: E501

        :param timestamp_epoch: The timestamp_epoch of this AnalyticsApiReportModel.  # noqa: E501
        :type: int
        """

        self._timestamp_epoch = timestamp_epoch

    @property
    def api_calls_success(self):
        """Gets the api_calls_success of this AnalyticsApiReportModel.  # noqa: E501

        The number of successful API calls in this group-by window.  # noqa: E501

        :return: The api_calls_success of this AnalyticsApiReportModel.  # noqa: E501
        :rtype: int
        """
        return self._api_calls_success

    @api_calls_success.setter
    def api_calls_success(self, api_calls_success):
        """Sets the api_calls_success of this AnalyticsApiReportModel.

        The number of successful API calls in this group-by window.  # noqa: E501

        :param api_calls_success: The api_calls_success of this AnalyticsApiReportModel.  # noqa: E501
        :type: int
        """

        self._api_calls_success = api_calls_success

    @property
    def api_calls4xx(self):
        """Gets the api_calls4xx of this AnalyticsApiReportModel.  # noqa: E501

        The number of API calls with an error code in the 4xx range in this group-by window.  # noqa: E501

        :return: The api_calls4xx of this AnalyticsApiReportModel.  # noqa: E501
        :rtype: int
        """
        return self._api_calls4xx

    @api_calls4xx.setter
    def api_calls4xx(self, api_calls4xx):
        """Sets the api_calls4xx of this AnalyticsApiReportModel.

        The number of API calls with an error code in the 4xx range in this group-by window.  # noqa: E501

        :param api_calls4xx: The api_calls4xx of this AnalyticsApiReportModel.  # noqa: E501
        :type: int
        """

        self._api_calls4xx = api_calls4xx

    @property
    def api_calls5xx(self):
        """Gets the api_calls5xx of this AnalyticsApiReportModel.  # noqa: E501

        The number of API calls with an error code in the 5xx range in this group-by window.  # noqa: E501

        :return: The api_calls5xx of this AnalyticsApiReportModel.  # noqa: E501
        :rtype: int
        """
        return self._api_calls5xx

    @api_calls5xx.setter
    def api_calls5xx(self, api_calls5xx):
        """Sets the api_calls5xx of this AnalyticsApiReportModel.

        The number of API calls with an error code in the 5xx range in this group-by window.  # noqa: E501

        :param api_calls5xx: The api_calls5xx of this AnalyticsApiReportModel.  # noqa: E501
        :type: int
        """

        self._api_calls5xx = api_calls5xx

    @property
    def api_calls_total(self):
        """Gets the api_calls_total of this AnalyticsApiReportModel.  # noqa: E501

        The total number of API calls in this group-by window.  # noqa: E501

        :return: The api_calls_total of this AnalyticsApiReportModel.  # noqa: E501
        :rtype: int
        """
        return self._api_calls_total

    @api_calls_total.setter
    def api_calls_total(self, api_calls_total):
        """Sets the api_calls_total of this AnalyticsApiReportModel.

        The total number of API calls in this group-by window.  # noqa: E501

        :param api_calls_total: The api_calls_total of this AnalyticsApiReportModel.  # noqa: E501
        :type: int
        """

        self._api_calls_total = api_calls_total

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AnalyticsApiReportModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AnalyticsApiReportModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

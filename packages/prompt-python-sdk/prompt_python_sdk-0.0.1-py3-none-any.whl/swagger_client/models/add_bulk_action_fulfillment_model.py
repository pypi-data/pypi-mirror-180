# coding: utf-8

"""
    Prompt.io APIs

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class AddBulkActionFulfillmentModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'message': 'str',
        'whisper': 'str',
        'instant_app_schema_api_id': 'str',
        'instant_app_message': 'str',
        'instant_app_parameters': 'str',
        'instant_app_locale': 'str',
        'snippet_code': 'str',
        'upload_id': 'int',
        'escalate_to_agent': 'bool',
        'complete_conversation': 'bool',
        'escalate_groups': 'list[int]',
        'call_event_endpoint': 'bool',
        'event_endpoint_path': 'str'
    }

    attribute_map = {
        'message': 'message',
        'whisper': 'whisper',
        'instant_app_schema_api_id': 'instantAppSchemaApiId',
        'instant_app_message': 'instantAppMessage',
        'instant_app_parameters': 'instantAppParameters',
        'instant_app_locale': 'instantAppLocale',
        'snippet_code': 'snippetCode',
        'upload_id': 'uploadId',
        'escalate_to_agent': 'escalateToAgent',
        'complete_conversation': 'completeConversation',
        'escalate_groups': 'escalateGroups',
        'call_event_endpoint': 'callEventEndpoint',
        'event_endpoint_path': 'eventEndpointPath'
    }

    def __init__(self, message=None, whisper=None, instant_app_schema_api_id=None, instant_app_message=None, instant_app_parameters=None, instant_app_locale=None, snippet_code=None, upload_id=None, escalate_to_agent=None, complete_conversation=None, escalate_groups=None, call_event_endpoint=None, event_endpoint_path=None):  # noqa: E501
        """AddBulkActionFulfillmentModel - a model defined in Swagger"""  # noqa: E501
        self._message = None
        self._whisper = None
        self._instant_app_schema_api_id = None
        self._instant_app_message = None
        self._instant_app_parameters = None
        self._instant_app_locale = None
        self._snippet_code = None
        self._upload_id = None
        self._escalate_to_agent = None
        self._complete_conversation = None
        self._escalate_groups = None
        self._call_event_endpoint = None
        self._event_endpoint_path = None
        self.discriminator = None
        if message is not None:
            self.message = message
        if whisper is not None:
            self.whisper = whisper
        if instant_app_schema_api_id is not None:
            self.instant_app_schema_api_id = instant_app_schema_api_id
        if instant_app_message is not None:
            self.instant_app_message = instant_app_message
        if instant_app_parameters is not None:
            self.instant_app_parameters = instant_app_parameters
        if instant_app_locale is not None:
            self.instant_app_locale = instant_app_locale
        if snippet_code is not None:
            self.snippet_code = snippet_code
        if upload_id is not None:
            self.upload_id = upload_id
        if escalate_to_agent is not None:
            self.escalate_to_agent = escalate_to_agent
        if complete_conversation is not None:
            self.complete_conversation = complete_conversation
        if escalate_groups is not None:
            self.escalate_groups = escalate_groups
        if call_event_endpoint is not None:
            self.call_event_endpoint = call_event_endpoint
        if event_endpoint_path is not None:
            self.event_endpoint_path = event_endpoint_path

    @property
    def message(self):
        """Gets the message of this AddBulkActionFulfillmentModel.  # noqa: E501

        The message to send to the user  # noqa: E501

        :return: The message of this AddBulkActionFulfillmentModel.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this AddBulkActionFulfillmentModel.

        The message to send to the user  # noqa: E501

        :param message: The message of this AddBulkActionFulfillmentModel.  # noqa: E501
        :type: str
        """

        self._message = message

    @property
    def whisper(self):
        """Gets the whisper of this AddBulkActionFulfillmentModel.  # noqa: E501

        The message to be posted to the conversation so that only agents can see it  # noqa: E501

        :return: The whisper of this AddBulkActionFulfillmentModel.  # noqa: E501
        :rtype: str
        """
        return self._whisper

    @whisper.setter
    def whisper(self, whisper):
        """Sets the whisper of this AddBulkActionFulfillmentModel.

        The message to be posted to the conversation so that only agents can see it  # noqa: E501

        :param whisper: The whisper of this AddBulkActionFulfillmentModel.  # noqa: E501
        :type: str
        """

        self._whisper = whisper

    @property
    def instant_app_schema_api_id(self):
        """Gets the instant_app_schema_api_id of this AddBulkActionFulfillmentModel.  # noqa: E501

        The programmatic, unique id of the schema for this Instant App Schema.  # noqa: E501

        :return: The instant_app_schema_api_id of this AddBulkActionFulfillmentModel.  # noqa: E501
        :rtype: str
        """
        return self._instant_app_schema_api_id

    @instant_app_schema_api_id.setter
    def instant_app_schema_api_id(self, instant_app_schema_api_id):
        """Sets the instant_app_schema_api_id of this AddBulkActionFulfillmentModel.

        The programmatic, unique id of the schema for this Instant App Schema.  # noqa: E501

        :param instant_app_schema_api_id: The instant_app_schema_api_id of this AddBulkActionFulfillmentModel.  # noqa: E501
        :type: str
        """

        self._instant_app_schema_api_id = instant_app_schema_api_id

    @property
    def instant_app_message(self):
        """Gets the instant_app_message of this AddBulkActionFulfillmentModel.  # noqa: E501

        Invite message to send for the Instant App. The customer link will replace the {link} token or will be placed at the end of the message  # noqa: E501

        :return: The instant_app_message of this AddBulkActionFulfillmentModel.  # noqa: E501
        :rtype: str
        """
        return self._instant_app_message

    @instant_app_message.setter
    def instant_app_message(self, instant_app_message):
        """Sets the instant_app_message of this AddBulkActionFulfillmentModel.

        Invite message to send for the Instant App. The customer link will replace the {link} token or will be placed at the end of the message  # noqa: E501

        :param instant_app_message: The instant_app_message of this AddBulkActionFulfillmentModel.  # noqa: E501
        :type: str
        """

        self._instant_app_message = instant_app_message

    @property
    def instant_app_parameters(self):
        """Gets the instant_app_parameters of this AddBulkActionFulfillmentModel.  # noqa: E501

        Instant App parameters passed into the Instant App  # noqa: E501

        :return: The instant_app_parameters of this AddBulkActionFulfillmentModel.  # noqa: E501
        :rtype: str
        """
        return self._instant_app_parameters

    @instant_app_parameters.setter
    def instant_app_parameters(self, instant_app_parameters):
        """Sets the instant_app_parameters of this AddBulkActionFulfillmentModel.

        Instant App parameters passed into the Instant App  # noqa: E501

        :param instant_app_parameters: The instant_app_parameters of this AddBulkActionFulfillmentModel.  # noqa: E501
        :type: str
        """

        self._instant_app_parameters = instant_app_parameters

    @property
    def instant_app_locale(self):
        """Gets the instant_app_locale of this AddBulkActionFulfillmentModel.  # noqa: E501

        Instant App locale  # noqa: E501

        :return: The instant_app_locale of this AddBulkActionFulfillmentModel.  # noqa: E501
        :rtype: str
        """
        return self._instant_app_locale

    @instant_app_locale.setter
    def instant_app_locale(self, instant_app_locale):
        """Sets the instant_app_locale of this AddBulkActionFulfillmentModel.

        Instant App locale  # noqa: E501

        :param instant_app_locale: The instant_app_locale of this AddBulkActionFulfillmentModel.  # noqa: E501
        :type: str
        """

        self._instant_app_locale = instant_app_locale

    @property
    def snippet_code(self):
        """Gets the snippet_code of this AddBulkActionFulfillmentModel.  # noqa: E501

        JavaScript Snippet to be executed  # noqa: E501

        :return: The snippet_code of this AddBulkActionFulfillmentModel.  # noqa: E501
        :rtype: str
        """
        return self._snippet_code

    @snippet_code.setter
    def snippet_code(self, snippet_code):
        """Sets the snippet_code of this AddBulkActionFulfillmentModel.

        JavaScript Snippet to be executed  # noqa: E501

        :param snippet_code: The snippet_code of this AddBulkActionFulfillmentModel.  # noqa: E501
        :type: str
        """

        self._snippet_code = snippet_code

    @property
    def upload_id(self):
        """Gets the upload_id of this AddBulkActionFulfillmentModel.  # noqa: E501

        Id of the upload to deliver  # noqa: E501

        :return: The upload_id of this AddBulkActionFulfillmentModel.  # noqa: E501
        :rtype: int
        """
        return self._upload_id

    @upload_id.setter
    def upload_id(self, upload_id):
        """Sets the upload_id of this AddBulkActionFulfillmentModel.

        Id of the upload to deliver  # noqa: E501

        :param upload_id: The upload_id of this AddBulkActionFulfillmentModel.  # noqa: E501
        :type: int
        """

        self._upload_id = upload_id

    @property
    def escalate_to_agent(self):
        """Gets the escalate_to_agent of this AddBulkActionFulfillmentModel.  # noqa: E501

        Should this conversation be escalated to agent's inboxes  # noqa: E501

        :return: The escalate_to_agent of this AddBulkActionFulfillmentModel.  # noqa: E501
        :rtype: bool
        """
        return self._escalate_to_agent

    @escalate_to_agent.setter
    def escalate_to_agent(self, escalate_to_agent):
        """Sets the escalate_to_agent of this AddBulkActionFulfillmentModel.

        Should this conversation be escalated to agent's inboxes  # noqa: E501

        :param escalate_to_agent: The escalate_to_agent of this AddBulkActionFulfillmentModel.  # noqa: E501
        :type: bool
        """

        self._escalate_to_agent = escalate_to_agent

    @property
    def complete_conversation(self):
        """Gets the complete_conversation of this AddBulkActionFulfillmentModel.  # noqa: E501

        Should the conversation be removed from agent's active list  # noqa: E501

        :return: The complete_conversation of this AddBulkActionFulfillmentModel.  # noqa: E501
        :rtype: bool
        """
        return self._complete_conversation

    @complete_conversation.setter
    def complete_conversation(self, complete_conversation):
        """Sets the complete_conversation of this AddBulkActionFulfillmentModel.

        Should the conversation be removed from agent's active list  # noqa: E501

        :param complete_conversation: The complete_conversation of this AddBulkActionFulfillmentModel.  # noqa: E501
        :type: bool
        """

        self._complete_conversation = complete_conversation

    @property
    def escalate_groups(self):
        """Gets the escalate_groups of this AddBulkActionFulfillmentModel.  # noqa: E501

        The agent groups this conversation will be escalated to  # noqa: E501

        :return: The escalate_groups of this AddBulkActionFulfillmentModel.  # noqa: E501
        :rtype: list[int]
        """
        return self._escalate_groups

    @escalate_groups.setter
    def escalate_groups(self, escalate_groups):
        """Sets the escalate_groups of this AddBulkActionFulfillmentModel.

        The agent groups this conversation will be escalated to  # noqa: E501

        :param escalate_groups: The escalate_groups of this AddBulkActionFulfillmentModel.  # noqa: E501
        :type: list[int]
        """

        self._escalate_groups = escalate_groups

    @property
    def call_event_endpoint(self):
        """Gets the call_event_endpoint of this AddBulkActionFulfillmentModel.  # noqa: E501

        Should event endpoints be called  # noqa: E501

        :return: The call_event_endpoint of this AddBulkActionFulfillmentModel.  # noqa: E501
        :rtype: bool
        """
        return self._call_event_endpoint

    @call_event_endpoint.setter
    def call_event_endpoint(self, call_event_endpoint):
        """Sets the call_event_endpoint of this AddBulkActionFulfillmentModel.

        Should event endpoints be called  # noqa: E501

        :param call_event_endpoint: The call_event_endpoint of this AddBulkActionFulfillmentModel.  # noqa: E501
        :type: bool
        """

        self._call_event_endpoint = call_event_endpoint

    @property
    def event_endpoint_path(self):
        """Gets the event_endpoint_path of this AddBulkActionFulfillmentModel.  # noqa: E501

        Event endpoints to be called  # noqa: E501

        :return: The event_endpoint_path of this AddBulkActionFulfillmentModel.  # noqa: E501
        :rtype: str
        """
        return self._event_endpoint_path

    @event_endpoint_path.setter
    def event_endpoint_path(self, event_endpoint_path):
        """Sets the event_endpoint_path of this AddBulkActionFulfillmentModel.

        Event endpoints to be called  # noqa: E501

        :param event_endpoint_path: The event_endpoint_path of this AddBulkActionFulfillmentModel.  # noqa: E501
        :type: str
        """

        self._event_endpoint_path = event_endpoint_path

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AddBulkActionFulfillmentModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AddBulkActionFulfillmentModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

# coding: utf-8

"""
    Prompt.io APIs

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class IntegrationResponseModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'api_id': 'str',
        'active': 'bool',
        'type': 'str',
        'id': 'int',
        'google_sheets_model': 'GoogleSheetsIntegrationModel',
        'twilio_model': 'TwilioIntegrationModel',
        'salesforce_model': 'SalesforceIntegrationResponseModel',
        'google_map_model': 'GoogleMapIntegrationModel',
        'data': 'dict(str, str)',
        'verified': 'bool'
    }

    attribute_map = {
        'name': 'name',
        'api_id': 'apiId',
        'active': 'active',
        'type': 'type',
        'id': 'id',
        'google_sheets_model': 'googleSheetsModel',
        'twilio_model': 'twilioModel',
        'salesforce_model': 'salesforceModel',
        'google_map_model': 'googleMapModel',
        'data': 'data',
        'verified': 'verified'
    }

    def __init__(self, name=None, api_id=None, active=None, type=None, id=None, google_sheets_model=None, twilio_model=None, salesforce_model=None, google_map_model=None, data=None, verified=None):  # noqa: E501
        """IntegrationResponseModel - a model defined in Swagger"""  # noqa: E501
        self._name = None
        self._api_id = None
        self._active = None
        self._type = None
        self._id = None
        self._google_sheets_model = None
        self._twilio_model = None
        self._salesforce_model = None
        self._google_map_model = None
        self._data = None
        self._verified = None
        self.discriminator = None
        if name is not None:
            self.name = name
        if api_id is not None:
            self.api_id = api_id
        if active is not None:
            self.active = active
        if type is not None:
            self.type = type
        if id is not None:
            self.id = id
        if google_sheets_model is not None:
            self.google_sheets_model = google_sheets_model
        if twilio_model is not None:
            self.twilio_model = twilio_model
        if salesforce_model is not None:
            self.salesforce_model = salesforce_model
        if google_map_model is not None:
            self.google_map_model = google_map_model
        if data is not None:
            self.data = data
        if verified is not None:
            self.verified = verified

    @property
    def name(self):
        """Gets the name of this IntegrationResponseModel.  # noqa: E501

        A descriptive name for this integration to show in agent UIs.  # noqa: E501

        :return: The name of this IntegrationResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this IntegrationResponseModel.

        A descriptive name for this integration to show in agent UIs.  # noqa: E501

        :param name: The name of this IntegrationResponseModel.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def api_id(self):
        """Gets the api_id of this IntegrationResponseModel.  # noqa: E501

        The programmatic, unique id of this integration.  # noqa: E501

        :return: The api_id of this IntegrationResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._api_id

    @api_id.setter
    def api_id(self, api_id):
        """Sets the api_id of this IntegrationResponseModel.

        The programmatic, unique id of this integration.  # noqa: E501

        :param api_id: The api_id of this IntegrationResponseModel.  # noqa: E501
        :type: str
        """

        self._api_id = api_id

    @property
    def active(self):
        """Gets the active of this IntegrationResponseModel.  # noqa: E501

        Whether the integration is active.  # noqa: E501

        :return: The active of this IntegrationResponseModel.  # noqa: E501
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this IntegrationResponseModel.

        Whether the integration is active.  # noqa: E501

        :param active: The active of this IntegrationResponseModel.  # noqa: E501
        :type: bool
        """

        self._active = active

    @property
    def type(self):
        """Gets the type of this IntegrationResponseModel.  # noqa: E501

        Type of the integration  # noqa: E501

        :return: The type of this IntegrationResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this IntegrationResponseModel.

        Type of the integration  # noqa: E501

        :param type: The type of this IntegrationResponseModel.  # noqa: E501
        :type: str
        """
        allowed_values = ["TWILIO", "SLACK", "GOOGLE_SHEETS", "ALTERRA", "SMOOCH", "YGL", "SALESFORCE", "GOOGLE_MAPS", "OKTA", "YTEL", "CHANNEL_VERIFY", "NATION_BUILDER", "LINE", "GOOGLE_CALENDAR", "BANDWIDTH", "BLACKBAUD", "NGP_VAN", "MANAGED_SIGNAL_WIRE", "SIGNAL_WIRE", "MANAGED_BANDWIDTH"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"  # noqa: E501
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def id(self):
        """Gets the id of this IntegrationResponseModel.  # noqa: E501

        The system generated unique id for this integration.  # noqa: E501

        :return: The id of this IntegrationResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this IntegrationResponseModel.

        The system generated unique id for this integration.  # noqa: E501

        :param id: The id of this IntegrationResponseModel.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def google_sheets_model(self):
        """Gets the google_sheets_model of this IntegrationResponseModel.  # noqa: E501


        :return: The google_sheets_model of this IntegrationResponseModel.  # noqa: E501
        :rtype: GoogleSheetsIntegrationModel
        """
        return self._google_sheets_model

    @google_sheets_model.setter
    def google_sheets_model(self, google_sheets_model):
        """Sets the google_sheets_model of this IntegrationResponseModel.


        :param google_sheets_model: The google_sheets_model of this IntegrationResponseModel.  # noqa: E501
        :type: GoogleSheetsIntegrationModel
        """

        self._google_sheets_model = google_sheets_model

    @property
    def twilio_model(self):
        """Gets the twilio_model of this IntegrationResponseModel.  # noqa: E501


        :return: The twilio_model of this IntegrationResponseModel.  # noqa: E501
        :rtype: TwilioIntegrationModel
        """
        return self._twilio_model

    @twilio_model.setter
    def twilio_model(self, twilio_model):
        """Sets the twilio_model of this IntegrationResponseModel.


        :param twilio_model: The twilio_model of this IntegrationResponseModel.  # noqa: E501
        :type: TwilioIntegrationModel
        """

        self._twilio_model = twilio_model

    @property
    def salesforce_model(self):
        """Gets the salesforce_model of this IntegrationResponseModel.  # noqa: E501


        :return: The salesforce_model of this IntegrationResponseModel.  # noqa: E501
        :rtype: SalesforceIntegrationResponseModel
        """
        return self._salesforce_model

    @salesforce_model.setter
    def salesforce_model(self, salesforce_model):
        """Sets the salesforce_model of this IntegrationResponseModel.


        :param salesforce_model: The salesforce_model of this IntegrationResponseModel.  # noqa: E501
        :type: SalesforceIntegrationResponseModel
        """

        self._salesforce_model = salesforce_model

    @property
    def google_map_model(self):
        """Gets the google_map_model of this IntegrationResponseModel.  # noqa: E501


        :return: The google_map_model of this IntegrationResponseModel.  # noqa: E501
        :rtype: GoogleMapIntegrationModel
        """
        return self._google_map_model

    @google_map_model.setter
    def google_map_model(self, google_map_model):
        """Sets the google_map_model of this IntegrationResponseModel.


        :param google_map_model: The google_map_model of this IntegrationResponseModel.  # noqa: E501
        :type: GoogleMapIntegrationModel
        """

        self._google_map_model = google_map_model

    @property
    def data(self):
        """Gets the data of this IntegrationResponseModel.  # noqa: E501

        Custom data used by some integration types  # noqa: E501

        :return: The data of this IntegrationResponseModel.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this IntegrationResponseModel.

        Custom data used by some integration types  # noqa: E501

        :param data: The data of this IntegrationResponseModel.  # noqa: E501
        :type: dict(str, str)
        """

        self._data = data

    @property
    def verified(self):
        """Gets the verified of this IntegrationResponseModel.  # noqa: E501

        Whether the integration is verified  # noqa: E501

        :return: The verified of this IntegrationResponseModel.  # noqa: E501
        :rtype: bool
        """
        return self._verified

    @verified.setter
    def verified(self, verified):
        """Sets the verified of this IntegrationResponseModel.

        Whether the integration is verified  # noqa: E501

        :param verified: The verified of this IntegrationResponseModel.  # noqa: E501
        :type: bool
        """

        self._verified = verified

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(IntegrationResponseModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IntegrationResponseModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

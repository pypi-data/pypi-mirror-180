# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['deduce', 'deduce.pattern', 'deduce.process', 'deduce.str']

package_data = \
{'': ['*']}

install_requires = \
['deprecated>=1.2.13,<2.0.0',
 'docdeid==0.1.4',
 'rapidfuzz>=2.11.1,<3.0.0',
 'regex>=2022.9.13,<2023.0.0']

setup_kwargs = {
    'name': 'deduce',
    'version': '2.0.1',
    'description': 'Deduce: de-identification method for Dutch medical text',
    'long_description': '# deduce\n\n[![tests](https://github.com/vmenger/deduce/actions/workflows/test.yml/badge.svg)](https://github.com/vmenger/deduce/actions/workflows/test.yml)\n[![coverage](https://coveralls.io/repos/github/vmenger/deduce/badge.svg)](https://coveralls.io/github/vmenger/deduce?branch=master)\n[![build](https://github.com/vmenger/deduce/actions/workflows/build.yml/badge.svg)](https://github.com/vmenger/deduce/actions/workflows/build.yml)\n[![documentation](https://readthedocs.org/projects/deduce/badge/?version=latest)](https://deduce.readthedocs.io/en/latest/?badge=latest)\n![pypi version](https://img.shields.io/pypi/v/deduce)\n![pypi python versions](https://img.shields.io/pypi/pyversions/deduce)\n![pypi downloads](https://img.shields.io/pypi/dm/deduce)\n![license](https://img.shields.io/github/license/vmenger/deduce)\n[![black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n[Installation](#installation) - [Versions](#versions) - [Getting Started](#getting-started) - [Documentation](#documentation) - [Contributiong](#contributing) - [Authors](#authors) - [License](#license)\n\n<!-- start include in docs -->\n\n> Deduce 2.0.0 has been released! It includes a 10x speedup, and way more features for customizing and tailoring. Some small changes are needed to keep going from version 1, read more about it here: [docs/migrating-to-v2](https://deduce.readthedocs.io/en/latest/migrating.html)\n\nDe-identify clinial text written in Dutch using `deduce`, a rule-based de-identification method for Dutch clinical text.\n\nThe development, principles and validation of `deduce` were initially described in [Menger et al. (2017)](http://www.sciencedirect.com/science/article/pii/S0736585316307365). De-identification of clinical text is needed for using text data for analysis, to comply with legal requirements and to protect the privacy of patients. Our rule-based method removes Protected Health Information (PHI) in the following categories:\n\n* Person names, including initials\n* Geographical locations smaller than a country\n* Names of institutions that are related to patient treatment\n* Dates\n* Ages\n* Patient numbers\n* Telephone numbers\n* E-mail addresses and URLs\n\nIf you use `deduce`, please cite the following paper:  \n\n[Menger, V.J., Scheepers, F., van Wijk, L.M., Spruit, M. (2017). DEDUCE: A pattern matching method for automatic de-identification of Dutch medical text, Telematics and Informatics, 2017, ISSN 0736-5853](http://www.sciencedirect.com/science/article/pii/S0736585316307365)\n\n## Installation\n\n``` python\npip install deduce\n```\n\n## Versions\n\nFor most cases the latest version is suitable, but some specific milestones are:\n\n* `2.0.0` - Major refactor, with speedups, many new options for customizing, functionally very similar to original \n* `1.0.8` - Small bugfixes compared to original release\n* `1.0.1` - Original release with [Menger et al. (2017)](http://www.sciencedirect.com/science/article/pii/S0736585316307365)\n\nDetailed versioning information is accessible in the [changelog](CHANGELOG.md). \n\n<!-- end include in docs -->\n<!-- start getting started -->\n\n## Getting started\n\nThe basic way to use `deduce`, is to pass text to the `deidentify` method of a `Deduce` object:\n\n```python\nfrom deduce import Deduce\n\ndeduce = Deduce()\n\ntext = """Dit is stukje tekst met daarin de naam Jan Jansen. De patient J. Jansen \n        (e: j.jnsen@email.com, t: 06-12345678) is 64 jaar oud en woonachtig \n        in Utrecht. Hij werd op 10 oktober door arts Peter de Visser ontslagen \n        van de kliniek van het UMCU."""\n\ndoc = deduce.deidentify(text)\n```\n\nThe output is available in the `Document` object:\n\n```python\nfrom pprint import pprint\n\npprint(doc.annotations)\n\nAnnotationSet({Annotation(text=\'Jan Jansen\', start_char=39, end_char=49, tag=\'persoon\', length=10),\n               Annotation(text=\'Peter de Visser\', start_char=185, end_char=200, tag=\'persoon\', length=15),\n               Annotation(text=\'j.jnsen@email.com\', start_char=76, end_char=93, tag=\'url\', length=17),\n               Annotation(text=\'10 oktober\', start_char=164, end_char=174, tag=\'datum\', length=10),\n               Annotation(text=\'patient J. Jansen\', start_char=54, end_char=71, tag=\'persoon\', length=17),\n               Annotation(text=\'64\', start_char=114, end_char=116, tag=\'leeftijd\', length=2),\n               Annotation(text=\'UMCU\', start_char=234, end_char=238, tag=\'instelling\', length=4),\n               Annotation(text=\'06-12345678\', start_char=98, end_char=109, tag=\'telefoonnummer\', length=11),\n               Annotation(text=\'Utrecht\', start_char=143, end_char=150, tag=\'locatie\', length=7)})\n\nprint(doc.deidentified_text)\n\n"""Dit is stukje tekst met daarin de naam <PERSOON-1>. De <PERSOON-2> \n(e: <URL-1>, t: <TELEFOONNUMMER-1>) is <LEEFTIJD-1> jaar oud en woonachtig \nin <LOCATIE-1>. Hij werd op <DATUM-1> door arts <PERSOON-3> ontslagen \nvan de kliniek van het <INSTELLING-1>."""\n```\n\nAditionally, if the names of the patient are known, they may be added as `metadata`, where they will be picked up by `deduce`:\n\n```python\nfrom deduce.person import Person\n\npatient = Person(first_names=["Jan"], initials="JJ", surname="Jansen")\ndoc = deduce.deidentify(text, metadata={\'patient\': patient})\n\nprint (doc.deidentified_text)\n\n"""Dit is stukje tekst met daarin de naam <PATIENT>. De <PATIENT> \n(e: <URL-1>, t: <TELEFOONNUMMER-1>) is <LEEFTIJD-1> jaar oud en woonachtig \nin <LOCATIE-1>. Hij werd op <DATUM-1> door arts <PERSOON-1> ontslagen \nvan de kliniek van het <INSTELLING-1>."""\n```\n\nAs you can see, adding known names keeps references to `<PATIENT>` in text. It also increases recall, as not all known names are contained in the lookup lists. \n\n<!-- end getting started -->\n\n## Documentation\n\nA more extensive tutorial on using, configuring and modifying `deduce` is available at: [docs/tutorial](https://deduce.readthedocs.io/en/latest/tutorial.html) \n\nBasic documentation and API are available at: [docs](https://deduce.readthedocs.io/en/latest/)\n\n## Contributing\n\nFor setting up the dev environment and contributing guidelines, see: [docs/contributing](https://deduce.readthedocs.io/en/latest/contributing.html)\n\n## Authors\n\n* **Vincent Menger** - *Initial work* \n* **Jonathan de Bruin** - *Code review*\n* **Pablo Mosteiro** - *Bug fixes, structured annotations*\n\n## License\n\nThis project is licensed under the GNU LGPLv3 license - see the [LICENSE.md](LICENSE.md) file for details',
    'author': 'Vincent Menger',
    'author_email': 'vmenger@protonmail.com',
    'maintainer': 'Vincent Menger',
    'maintainer_email': 'vmenger@protonmail.com',
    'url': 'https://github.com/vmenger/deduce/',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.9,<4.0',
}


setup(**setup_kwargs)

[check-manifest]
ignore =
    *.sublime-project
    .git*
    .vscode/*
    manage.py

[metadata]
name = medux
version = attr:src.medux.core.__version__
description = "Open Source Electronic Medical Record."
long_description = file: README.md, INSTALL.md, CHANGELOG.rst,
long_description_content_type = text/x-rst
author = Christian GonzÃ¡lez
author_email = christian.gonzalez@nerdocs.at
url = https://www.medux.at
license = AGPLv3+
license_file = LICENSE.md
project_urls =
    Bug Tracker = https://gitlab.com/nerdocs/medux/medux/-/issues
    Documentation = https://medux.readthedocs.io
    Source Code = https://gitlab.com/nerdocs/medux/medux

classifiers =
    Development Status :: 2 - Pre-Alpha
    Environment :: Web Environment
    Framework :: Django :: 3.2
    Intended Audience :: Developers
    License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.6
    Programming Language :: JavaScript
    Topic :: Internet :: WWW/HTTP
    Topic :: Internet :: WWW/HTTP :: Dynamic Content


[options]
zip_safe = True
include_package_data = True
namespace_packages = medux.plugins
package_dir =
    =src
packages = find_namespace:
python_requires = >=3.6
install_requires =
    django>=3.2
    djangorestframework
    gdaps>=0.5.0
    django-environ
    django_filter
    whitenoise
    django-htmx
    django-simple-menu
    uvicorn
    gunicorn
    httptools
    uvloop
    psycopg2-binary
    pillow
    django-composite-field
scripts =
    scripts/install.sh
    ; maybe remove that sometimes or rename to "medux-admin":
    src/manage.py

[options.packages.find]
where = src
exclude =
    node_modules

;[options.data_files]


[coverage:run]
source = medux
omit = */urls.py,*/tests/*,.eggs/*,medux/wsgi.py,medux/asgi.py,*/migrations/*,*/admin.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __str__
    def __repr__
    if settings.DEBUG
    NOQA
    NotImplementedError

[options.entry_points]
# here are plugins that should be included per default
# They are included by GDAPS into INSTALLED_APPS automatically
medux.plugins =
    core = medux.core:apps.CoreConfig
    alerts = medux.alerts:apps.AlertsConfig

[options.extras_require]
dev =
    check-manifest
    pytest>=6.0.0
    pytest-django
    pytest-cov==2.7.1
    twine
    pre-commit
    django-debug-toolbar

[flake8]
exclude = docs

[bdist_wheel]
universal = 1

[tool:pytest]
DJANGO_SETTINGS_MODULE = tests.settings
;addopts = --reruns 3 -rw
filterwarnings =
    error
    ignore::DeprecationWarning
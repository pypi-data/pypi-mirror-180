{"version":3,"file":"chunks/41505.994ad38a61fbc15cd6d6.min.js","mappings":"6GAMA,EAAQ,M,oBCEP,WACG,aAEA,IAAIA,EAAWC,QAAQC,KAAKC,MAAMC,QAAQ,yBAEtCC,EAAWJ,QAAQC,KAAKC,MAAMC,QAAQ,wBAEtCE,EAAWL,QAAQC,KAAKC,MAAMC,QAAQ,yBAEtCG,EAAWN,QAAQC,KAAKC,MAAMC,QAAQ,eAEtCI,EAAWP,QAAQC,KAAKC,MAAMC,QAAQ,sBAEtCK,EAAWR,QAAQC,KAAKC,MAAMC,QAAQ,sBAEtCM,EAAST,QAAQC,KAAKC,MAAMC,QAAQ,mBASpCO,EAAMN,EAASM,IACfC,EAAY,SAAUC,GACpBA,EAAEC,UAAYJ,EAAOK,KAAQF,EAAEG,SAAYH,EAAEI,QAAWJ,EAAEK,SAC5DL,EAAEM,gBAEN,EAqFEnB,EAASoB,IAAI,YAAY,SAAUC,IApFzB,SAAUA,GACpB,IAAIC,EAAa,SAAUT,GACzB,IAAIU,EACJ,KAAIV,EAAEC,UAAYJ,EAAOK,KAAOF,EAAEG,SAAWH,EAAEI,QAAUJ,EAAEK,SAAWL,EAAEW,sBAAxE,CAGA,IAmCIC,EAnCAC,EAAO,SAAUC,GACnB,IAAIF,EAAKd,EAAIiB,OAAO,0CAChBC,EAAqB,SAAUhB,GACjC,IAAIiB,EAAWjB,EACf,MAAsB,SAAfA,EAAEkB,UAAyC,WAAlBD,EAASE,MAAgD,SAA3BF,EAASG,MAAMC,SAAoD,WAA9BJ,EAASG,MAAME,YAA2BN,EAAmBhB,EAAEuB,WACpK,EACIC,EAAY,SAAUZ,GACxB,MAAO,wBAAwBa,KAAKb,EAAGc,UAAYjC,EAASkC,IAAI3B,EAAE4B,MAAwB,IAAjBhB,EAAGiB,UAAmBb,EAAmBJ,EACpH,EAOA,GANAhB,EAASkC,KAAKlB,GAAI,SAAUZ,EAAG+B,GAC7B,GAAI/B,EAAE4B,KAAOpB,EAAOoB,GAElB,OADAlB,EAAIqB,GACG,CAEX,IACIjB,EAAY,GACd,IAAK,IAAIiB,EAAIrB,EAAI,EAAGqB,EAAInB,EAAGoB,OAAQD,IACjC,GAAIP,EAAUZ,EAAGmB,IACf,OAAOnB,EAAGmB,QAId,IAASA,EAAIrB,EAAI,EAAGqB,GAAK,EAAGA,IAC1B,GAAIP,EAAUZ,EAAGmB,IACf,OAAOnB,EAAGmB,GAIhB,OAAO,IACT,EACIE,EAAIrC,EAASsC,QA9CH,SAAU1B,GAC1B,OAAOA,EAAO2B,SAAS,YAJC,SAAU3B,GAClC,OAAOA,EAAO2B,SAAS,oBAAqB,cAC9C,CAEsCC,CAAoB5B,GAC1D,CA4C6B6B,CAAY7B,IAmBrC,GAlBiB,IAAbyB,EAAED,SACJC,EAAE,GAAKA,EAAE,GACTA,EAAE,GAAK,SAKLrB,EAFAZ,EAAEsC,SACS,UAATL,EAAE,GACCpB,GAAM,GAENf,EAAI6B,IAAIM,EAAE,IAGJ,UAATA,EAAE,GACCpB,EAAK,GAELf,EAAI6B,IAAIM,EAAE,IAGX,CACN,IAAIM,EAAc9C,EAASkC,IAAIf,EAAGgB,IAAMhB,EAAG4B,MACvC5B,EAAGgB,IAAMW,EACXA,EAAYE,QAEZ9C,EAAS+C,YAAW,WACbhD,EAASiD,QACZC,OAAOH,QAET7B,EAAG6B,OACL,GAAG,IAELzC,EAAEM,gBACJ,CA/DA,CAgEF,EACAE,EAAOqC,GAAG,QAAQ,WACZrC,EAAOsC,QACThD,EAAIiD,UAAUvC,EAAOwC,UAAW,WAAY,MAE9CxC,EAAOqC,GAAG,QAAS9C,GACfL,EAASuD,MACXzC,EAAOqC,GAAG,mBAAoBpC,GAE9BD,EAAOqC,GAAG,UAAWpC,EAEzB,GACF,CAIIyC,CAAM1C,EACR,GAKN,CAzHA,E","sources":["webpack://plone-mosaic/./node_modules/tinymce/plugins/tabfocus/index.js","webpack://plone-mosaic/./node_modules/tinymce/plugins/tabfocus/plugin.js"],"sourcesContent":["// Exports the \"tabfocus\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/tabfocus')\n//   ES2015:\n//     import 'tinymce/plugins/tabfocus'\nrequire('./plugin.js');","/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.10.7 (2022-12-06)\n */\n(function () {\n    'use strict';\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.EditorManager');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var getTabFocusElements = function (editor) {\n      return editor.getParam('tabfocus_elements', ':prev,:next');\n    };\n    var getTabFocus = function (editor) {\n      return editor.getParam('tab_focus', getTabFocusElements(editor));\n    };\n\n    var DOM = global$5.DOM;\n    var tabCancel = function (e) {\n      if (e.keyCode === global.TAB && !e.ctrlKey && !e.altKey && !e.metaKey) {\n        e.preventDefault();\n      }\n    };\n    var setup = function (editor) {\n      var tabHandler = function (e) {\n        var x;\n        if (e.keyCode !== global.TAB || e.ctrlKey || e.altKey || e.metaKey || e.isDefaultPrevented()) {\n          return;\n        }\n        var find = function (direction) {\n          var el = DOM.select(':input:enabled,*[tabindex]:not(iframe)');\n          var canSelectRecursive = function (e) {\n            var castElem = e;\n            return e.nodeName === 'BODY' || castElem.type !== 'hidden' && castElem.style.display !== 'none' && castElem.style.visibility !== 'hidden' && canSelectRecursive(e.parentNode);\n          };\n          var canSelect = function (el) {\n            return /INPUT|TEXTAREA|BUTTON/.test(el.tagName) && global$4.get(e.id) && el.tabIndex !== -1 && canSelectRecursive(el);\n          };\n          global$1.each(el, function (e, i) {\n            if (e.id === editor.id) {\n              x = i;\n              return false;\n            }\n          });\n          if (direction > 0) {\n            for (var i = x + 1; i < el.length; i++) {\n              if (canSelect(el[i])) {\n                return el[i];\n              }\n            }\n          } else {\n            for (var i = x - 1; i >= 0; i--) {\n              if (canSelect(el[i])) {\n                return el[i];\n              }\n            }\n          }\n          return null;\n        };\n        var v = global$1.explode(getTabFocus(editor));\n        if (v.length === 1) {\n          v[1] = v[0];\n          v[0] = ':prev';\n        }\n        var el;\n        if (e.shiftKey) {\n          if (v[0] === ':prev') {\n            el = find(-1);\n          } else {\n            el = DOM.get(v[0]);\n          }\n        } else {\n          if (v[1] === ':next') {\n            el = find(1);\n          } else {\n            el = DOM.get(v[1]);\n          }\n        }\n        if (el) {\n          var focusEditor = global$4.get(el.id || el.name);\n          if (el.id && focusEditor) {\n            focusEditor.focus();\n          } else {\n            global$2.setTimeout(function () {\n              if (!global$3.webkit) {\n                window.focus();\n              }\n              el.focus();\n            }, 10);\n          }\n          e.preventDefault();\n        }\n      };\n      editor.on('init', function () {\n        if (editor.inline) {\n          DOM.setAttrib(editor.getBody(), 'tabIndex', null);\n        }\n        editor.on('keyup', tabCancel);\n        if (global$3.gecko) {\n          editor.on('keypress keydown', tabHandler);\n        } else {\n          editor.on('keydown', tabHandler);\n        }\n      });\n    };\n\n    function Plugin () {\n      global$6.add('tabfocus', function (editor) {\n        setup(editor);\n      });\n    }\n\n    Plugin();\n\n}());\n"],"names":["global$6","tinymce","util","Tools","resolve","global$5","global$4","global$3","global$2","global$1","global","DOM","tabCancel","e","keyCode","TAB","ctrlKey","altKey","metaKey","preventDefault","add","editor","tabHandler","x","isDefaultPrevented","el","find","direction","select","canSelectRecursive","castElem","nodeName","type","style","display","visibility","parentNode","canSelect","test","tagName","get","id","tabIndex","each","i","length","v","explode","getParam","getTabFocusElements","getTabFocus","shiftKey","focusEditor","name","focus","setTimeout","webkit","window","on","inline","setAttrib","getBody","gecko","setup"],"sourceRoot":""}
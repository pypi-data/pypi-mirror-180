Metadata-Version: 2.1
Name: pywirelessmbus
Version: 1.5.3
Summary: A tool to receive and send Wireless-M-Bus messages.
Home-page: https://github.com/gewv-tu-dresden/pyWirelessMbus
License: MIT
Author: Karl Wolffgang
Author-email: karl_eugen.wolffgang@tu-dresden.de
Requires-Python: >=3.7,<4.0
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Requires-Dist: loguru (>=0.6.0,<0.7.0)
Requires-Dist: pyserial (>=3.5,<4.0)
Requires-Dist: pyserial-asyncio (>=0.6,<0.7)
Description-Content-Type: text/markdown

# pyWirelessMbus

This module can decode messages from wireless M-Bus devices. The messages must received from a usb-uart stick. At this moment only the [iM871A-USB from IMST](https://shop.imst.de/wireless-modules/usb-radio-products/10/im871a-usb-wireless-m-bus-usb-adapter-868-mhz) is usable. Maybe somebody can add a alternative.

On the device side pyWirelessMbus reads the messages from the Temp/Hum Sensor [Munia from Weptech](https://www.weptech.de/en/wireless-m-bus/humidity-temperature-sensor-munia.html) and the [EnergyCam from Q-loud](https://www.q-loud.de/energycam).

## Requirements

Python >= 3.8

## Installation

```
pip install pywirelessmbus
```

## Development

For testing you can install all deps and start the module with that commands.

```
poetry install
poetry shell
python examples/monitor.py
```

## Plans

- Add more devices
- Add tests
- Send messages



# GDB uses an internal Python interpreter which means user installed packages in a
# virtual environment are ignored.  This setup script adds the user's sys.path to
# GDB's such that we can find installed packages.  Additionally, gdbundle is used
# to automate loading of GDB Python plugins, see https://interrupt.memfault.com/blog/gdbundle-plugin-manager.
python

import subprocess, sys, gdb, pkgutil
from pathlib import Path

# Execute Python using the user's shell and pull out the sys.path (for site-packages)
paths = subprocess.check_output('python -c "import os,sys;print(os.linesep.join(sys.path).strip())"',shell=True).decode("utf-8").split()
# Extend GDB's Python search path
sys.path.extend(paths)

# Source any gdb_init.py scripts in any packages
import gdbundle
gdbundle.init()

end

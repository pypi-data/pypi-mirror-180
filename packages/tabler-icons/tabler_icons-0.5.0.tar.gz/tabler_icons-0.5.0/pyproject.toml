[tool.poetry]
name = "tabler_icons"
description = "SVG tabler icons for your apps."
version = "0.5.0"
authors = ["Alex Oleshkevich <alex.oleshkevich@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/alex-oleshkevich/tabler_icons"
repository = "https://github.com/alex-oleshkevich/tabler_icons"
documentation = "https://github.com/alex-oleshkevich/tabler_icons"
keywords = []
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.9",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.9.0"
markupsafe = "*"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-asyncio = "^0.18.0"
requests = "^2.26.0"
pytest-cov = "^4.0"
black = "^22.1"
mypy = "^0.941"
flake8 = "^4.0.1"
Django = "^4.0.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ["py310"]
skip-string-normalization = true
line_length = 120
extend-exclude = true
exclude = '''
(
    asv_bench/env
  | \.egg
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | _workdir
  | setup.py
)
'''


[tool.isort]
combine_as_imports = true
include_trailing_comma = true
known_standard_library = "dataclasses,typing_extensions"
known_first_party = "tabler_icons"
known_third_party = ["pkg_resources", "toml"]
known_future_library = "__future__"
line_length = 120
multi_line_output = 3
profile = "black"
use_parentheses = true

[tool.coverage.run]
branch = true
source = ["tabler_icons"]
omit = ["tests/*", ".venv/*", ".git/*",  "*/__main__.py", "_workdir"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError"
]

[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true
files = ["tabler_icons", "tests"]

[tool.pytest.ini_options]
minversion =  "7.2"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
norecursedirs = [
    "node_modules", "frontend", "storage", "dist", ".git",
    "*/migrations/*", "*/static/*", "docs", ".venv", "_workdir"
]
addopts = "--tb=short -s --no-cov-on-fail"
testpaths = ["tests"]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

---
- ansible.builtin.debug: msg="START connection={{ ansible_connection }} ios_l2_interface sanity test"

- name: Setup interface
  cisco.ios.ios_config: &id009
    lines:
      - default interface {{ test_interface }}

- name: Set trunk encapsulation type
  cisco.ios.ios_config:
    lines:
      - switchport trunk encapsulation dot1q
    parents:
      - interface {{ test_interface }}

- name: Setup vlans
  cisco.ios.ios_vlan:
    aggregate:
      - vlan_id: 5

      - vlan_id: 6

      - vlan_id: 7

      - vlan_id: 8

      - vlan_id: 9

      - vlan_id: 10

      - vlan_id: 20

- block:
    - name: Ensure interface is in its default switchport state
      cisco.ios.ios_l2_interface: &id008
        name: "{{ test_interface }}"
        state: unconfigured

    - name: Ensure interface is configured for access VLAN 20
      register: result
      cisco.ios.ios_l2_interface: &id001
        name: "{{ test_interface }}"
        mode: access
        access_vlan: 20

    - ansible.builtin.assert: &id002
        that:
          - result.changed == true

    - name: Access VLAN idempotent
      register: result
      cisco.ios.ios_l2_interface: *id001
    - ansible.builtin.assert: &id004
        that:
          - result.changed == false

    - name: Ensure interface only has vlans 5-10 as trunk vlans
      register: result
      cisco.ios.ios_l2_interface: &id003
        name: "{{ test_interface }}"
        mode: trunk
        native_vlan: 10
        trunk_allowed_vlans: 5-10

    - ansible.builtin.assert: *id002
    - name: Trunk VLAN idempotent
      register: result
      cisco.ios.ios_l2_interface: *id003
    - ansible.builtin.assert: *id004
    - name: Ensure interface is a trunk port and ensure 2-50 are being tagged (doesn't mean others aren't also being tagged)
      register: result
      cisco.ios.ios_l2_interface: &id005
        name: "{{ test_interface }}"
        mode: trunk
        native_vlan: 10
        trunk_vlans: 2-50

    - ansible.builtin.assert: *id002
    - name: Tag VLAN idempotent
      register: result
      cisco.ios.ios_l2_interface: *id005
    - ansible.builtin.assert: *id004
    - name: Remove full trunk VLAN range 2-50
      register: result
      cisco.ios.ios_l2_interface: &id006
        name: "{{ test_interface }}"
        mode: trunk
        trunk_vlans: 2-50
        state: absent

    - ansible.builtin.assert: *id002
    - name: Check idempotent remove full trunk VLAN range 2-50
      register: result
      cisco.ios.ios_l2_interface: *id006
    - ansible.builtin.assert: *id004
    - name: Reconfigure interface trunk port and ensure 2-50 are being tagged
      register: result
      cisco.ios.ios_l2_interface: *id005
    - ansible.builtin.assert: *id002
    - name: Check idempotent reconfigure interface trunk port and ensure 2-50 are being tagged
      register: result
      cisco.ios.ios_l2_interface: *id005
    - ansible.builtin.assert: *id004
    - name: Remove partial trunk VLAN range 30-4094 are removed
      register: result
      cisco.ios.ios_l2_interface: &id007
        name: "{{ test_interface }}"
        mode: trunk
        trunk_vlans: 30-4094
        state: absent

    - ansible.builtin.assert: *id002
    - name: Check idempotent remove partial trunk VLAN range 30-4094 are removed
      register: result
      cisco.ios.ios_l2_interface: *id007
    - ansible.builtin.assert: *id004
    - name: Put interface default state
      register: result
      cisco.ios.ios_l2_interface: *id008
    - ansible.builtin.assert: *id002
    - name: Default state idempotent
      register: result
      cisco.ios.ios_l2_interface: *id008
    - ansible.builtin.assert: *id004
  always:
    - name: Remove vlans
      ignore_errors: true
      cisco.ios.ios_vlan:
        aggregate:
          - vlan_id: 5

          - vlan_id: 6

          - vlan_id: 7

          - vlan_id: 8

          - vlan_id: 9

          - vlan_id: 10

          - vlan_id: 20
        state: absent

    - name: Default interface
      ignore_errors: true
      cisco.ios.ios_config: *id009

- ansible.builtin.debug: msg="END connection={{ ansible_connection }} ios_l2_interface sanity test"
